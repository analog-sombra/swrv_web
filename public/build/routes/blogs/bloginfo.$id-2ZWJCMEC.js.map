{
  "version": 3,
  "sources": ["../../../../app/routes/blogs/bloginfo.$id.tsx"],
  "sourcesContent": ["import { Footer } from \"~/components/home/footer/footer\";\r\nimport { IntroNavBar } from \"~/components/home/navbar/intronavbar\";\r\nimport BlogsInfo from \"~/components/blogpage/bloginfo\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n    const id = props.params.id;\r\n    const nebdata = await axios.post(`${BaseUrl}/api/get-neb-byid`, { \"id\": id, });\r\n    if (nebdata.data.data.title == undefined ||  nebdata.data.data.title == null) {\r\n        return json({ nebdata: nebdata.data.data[0], error: true });\r\n    } else {\r\n        return json({ nebdata: nebdata.data.data[0], error: false });\r\n    }\r\n}\r\n\r\nconst blogs = () => {\r\n    let data = useLoaderData();\r\n    return (\r\n        <>\r\n            <IntroNavBar></IntroNavBar>\r\n            <BlogsInfo error={data.error} image={data.nebdata.imageUrl} title={data.nebdata.title} shorttitle={data.nebdata.titleDesc} description={data.nebdata.description} date={data.nebdata.dateTime} type={data.nebdata.type}></BlogsInfo>\r\n            <Footer></Footer>\r\n        </>\r\n    );\r\n}\r\nexport default blogs;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAqBQ;AAHR,IAAM,QAAQ,MAAM;AAChB,MAAI,OAAO,cAAc;AACzB,SACI,sFACI;AAAA,uDAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IACb,mDAAC,oBAAU,OAAO,KAAK,OAAO,OAAO,KAAK,QAAQ,UAAU,OAAO,KAAK,QAAQ,OAAO,YAAY,KAAK,QAAQ,WAAW,aAAa,KAAK,QAAQ,aAAa,MAAM,KAAK,QAAQ,UAAU,MAAM,KAAK,QAAQ,QAAlN;AAAA;AAAA;AAAA;AAAA,WAAwN;AAAA,IACxN,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,OAHZ;AAAA;AAAA;AAAA;AAAA,SAIA;AAER;AACA,IAAO,sBAAQ;",
  "names": []
}
