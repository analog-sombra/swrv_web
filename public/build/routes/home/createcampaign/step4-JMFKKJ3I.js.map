{
  "version": 3,
  "sources": ["../../../../../app/routes/home/createcampaign/step4.tsx"],
  "sourcesContent": ["import { useNavigate } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ReactSwitch from \"react-switch\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport CreateCampaignStore from \"~/state/campaign/createcampaign\";\r\n\r\nconst Step4 = () => {\r\n    const navigator = useNavigate();\r\n    const [active, setActive] = useState(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const CampaignName = useRef<HTMLInputElement | null>(null);\r\n    const campaignName = CreateCampaignStore((state) => state.campaignName);\r\n    const setCampaignName = CreateCampaignStore((state) => state.setCampaignName);\r\n\r\n    const PlanedBudget = useRef<HTMLInputElement | null>(null);\r\n    const planedBudget = CreateCampaignStore((state) => state.planedBudget);\r\n    const setPlanedBudget = CreateCampaignStore((state) => state.setPlanedBudget);\r\n\r\n    const CostPerPost = useRef<HTMLInputElement | null>(null);\r\n    const costPerPost = CreateCampaignStore((state) => state.costPerPost);\r\n    const setCostPerPost = CreateCampaignStore((state) => state.setCostPerPost);\r\n\r\n    const StartDate = useRef<HTMLInputElement | null>(null);\r\n    const startDate = CreateCampaignStore((state) => state.startDate);\r\n    const setStartDate = CreateCampaignStore((state) => state.setStartDate);\r\n\r\n    const EndDate = useRef<HTMLInputElement | null>(null);\r\n    const endDate = CreateCampaignStore((state) => state.endDate);\r\n    const setEndDate = CreateCampaignStore((state) => state.setEndDate);\r\n\r\n    const MinReach = useRef<HTMLInputElement | null>(null);\r\n    const minReach = CreateCampaignStore((state) => state.minReach);\r\n    const setMinReach = CreateCampaignStore((state) => state.setMinReach);\r\n\r\n    const MaxReact = useRef<HTMLInputElement | null>(null);\r\n    const maxReact = CreateCampaignStore((state) => state.maxReact);\r\n    const setMaxReact = CreateCampaignStore((state) => state.setMaxReact);\r\n\r\n    const publicGlobally = CreateCampaignStore((state) => state.publicGlobally);\r\n    const setPublicGlobally = CreateCampaignStore((state) => state.setPublicGlobally);\r\n\r\n    useEffect(() => {\r\n        if (CampaignName.current?.value != null) {\r\n            CampaignName!.current!.value = campaignName;\r\n        }\r\n        if (PlanedBudget.current?.value != null) {\r\n            PlanedBudget!.current!.value = planedBudget.toString();\r\n        }\r\n        if (CostPerPost.current?.value != null) {\r\n            CostPerPost!.current!.value = costPerPost.toString();\r\n        }\r\n        if (StartDate.current?.value != null) {\r\n            StartDate!.current!.value = startDate;\r\n        }\r\n        if (EndDate.current?.value != null) {\r\n            EndDate!.current!.value = endDate;\r\n        }\r\n        if (MinReach.current?.value != null) {\r\n            MinReach!.current!.value = minReach.toString();\r\n        }\r\n        if (MaxReact.current?.value != null) {\r\n            MaxReact!.current!.value = maxReact.toString();\r\n        }\r\n        setActive(publicGlobally);\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex gap-x-4 flex-col lg:flex-row\">\r\n                <div className=\"bg-white shadow-xl rounded-xl px-8 py-4 mt-4\">\r\n                    <h1 className=\"text-primary text-lg font-medium\">Create campaign</h1>\r\n                    <p className=\"text-primary text-md font-normal\">The term business demography is used to cover a set of variables which explain the characteristics and demography of the business population.</p>\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Campaign name</h2>\r\n                    <input ref={CampaignName} type={\"text\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\" />\r\n\r\n                    <div className=\"flex flex-col lg:flex-row\">\r\n                        <div>\r\n                            <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Planed budget</h2>\r\n                            <input ref={PlanedBudget} type={\"number\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2  lg:w-72\" />\r\n                        </div>\r\n                        <div className=\"w-8\"></div>\r\n                        <div>\r\n                            <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Cost per post</h2>\r\n                            <input ref={CostPerPost} type={\"number\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col lg:flex-row\">\r\n                        <div>\r\n                            <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Start date</h2>\r\n                            <input type={\"date\"} ref={StartDate} className=\"bg-[#EEEEEE] outline-none border-none rounded-lg focus:border-gray-300 w-full p-2 lg:w-72\"></input>\r\n                        </div>\r\n                        <div className=\"w-8\"></div>\r\n                        <div>\r\n                            <h2 className=\"text-primary tect-xl font-medium text-left my-1\">End date</h2>\r\n                            <input ref={EndDate} type={\"date\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col lg:flex-row\">\r\n                        <div>\r\n                            <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Min reach</h2>\r\n                            <input ref={MinReach} type={\"number\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\" />\r\n                        </div>\r\n                        <div className=\"w-8\"></div>\r\n                        <div>\r\n                            <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Max reach</h2>\r\n                            <input ref={MaxReact} type={\"number\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-x-4\">\r\n                        <ReactSwitch onChange={() => setActive(!active)} checked={active} checkedIcon={false} uncheckedIcon={false} onColor=\"#03125E\"></ReactSwitch>\r\n                        <div className=\"grow\">\r\n                            <h1 className=\"text-primary text-lg font-medium\">Public globally</h1>\r\n                            <p className=\"text-primary text-md font-normal\">The term business demography is used to cover a set of variables which explain the characteristics and demography of the business population.</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className=\"lg:w-80 bg-white  shadow-lx rounded-xl p-4 mt-4\">\r\n                        <h1 className=\"text-primary text-lg font-medium\">Campaign Summary</h1>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Brand name</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Brand name</p>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Campaign name</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Campaign name</p>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Planed budget</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Planed budget</p>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Cost per post</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Cost per post</p>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Audience loaction</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Audience loaction</p>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Influencer category</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Influencer category</p>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Start date</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Start date</p>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <p className=\"text-sm text-primary font-normal\">Min reach</p>\r\n                            <div className=\"grow\"></div>\r\n                            <p className=\"text-sm text-primary font-medium\">Min reach</p>\r\n                        </div>\r\n                        {(error == \"\" || error == null || error == undefined) ? null :\r\n                            <div className=\"my-4 bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-xl text-red-500 text-md font-normal text-md\">{error}</div>\r\n                        }\r\n                        <div className=\"flex w-full\">\r\n                            <div onClick={() => { navigator(-1) }} className=\"w-full\">\r\n                                <CusButton text=\"Back\" textColor={\"text-black\"} background=\"bg-gray-100\" width={\"w-full\"} fontwidth={\"font-bold\"}></CusButton>\r\n                            </div>\r\n                            <div className=\"w-10\"></div>\r\n                            <div className=\"w-full\" onClick={() => {\r\n\r\n                                const x = new Date(StartDate!.current!.value);\r\n                                const y = new Date(EndDate!.current!.value);\r\n                                const pass_date: boolean = x > y;\r\n                                if (CampaignName.current?.value == null || CampaignName.current?.value == undefined || CampaignName.current?.value == \"\") {\r\n                                    setError(\"Enter campaign name\");\r\n                                } else if (CampaignName.current?.value.length < 4) {\r\n                                    setError(\"Campaign should be more then 3 character.\");\r\n                                } else if (PlanedBudget.current?.value == null || PlanedBudget.current?.value == undefined || PlanedBudget.current?.value == \"\" || parseInt(PlanedBudget.current?.value) == 0) {\r\n                                    setError(\"Enter planed budget\");\r\n                                }\r\n                                else if (CostPerPost.current?.value == null || CostPerPost.current?.value == undefined || CostPerPost.current?.value == \"\" || parseInt(CostPerPost.current?.value) == 0) {\r\n                                    setError(\"Enter planed cost per post\");\r\n                                }\r\n                                else if (StartDate.current?.value == null || StartDate.current?.value == undefined || StartDate.current?.value == \"\") {\r\n                                    setError(\"Enter planed starting date\");\r\n                                }\r\n                                else if (EndDate.current?.value == null || EndDate.current?.value == undefined || EndDate.current?.value == \"\") {\r\n                                    setError(\"Enter planed end date\");\r\n                                }\r\n                                else if (MinReach.current?.value == null || MinReach.current?.value == undefined || MinReach.current?.value == \"\" || parseInt(MinReach.current?.value) == 0) {\r\n                                    setError(\"Enter planed min reach\");\r\n                                }\r\n                                else if (MaxReact.current?.value == null || MaxReact.current?.value == undefined || MaxReact.current?.value == \"\" || parseInt(MaxReact.current?.value) == 0) {\r\n                                    setError(\"Enter planed max reach\");\r\n                                }\r\n                                else if (parseInt(MinReach.current?.value) > parseInt(MaxReact.current?.value)) {\r\n                                    setError(\"Max react should be gretter then min reach\");\r\n                                } else if (pass_date) {\r\n                                    setError(\"Start date should be less then end date\");\r\n                                }\r\n                                else {\r\n                                    setCampaignName(CampaignName!.current!.value);\r\n                                    setPlanedBudget(parseInt(CostPerPost!.current!.value));\r\n                                    setCostPerPost(parseInt(CostPerPost!.current!.value));\r\n                                    setStartDate(StartDate!.current!.value);\r\n                                    setEndDate(EndDate!.current!.value);\r\n                                    setMinReach(parseInt(MinReach.current?.value));\r\n                                    setMaxReact(parseInt(MaxReact.current?.value));\r\n                                    setPublicGlobally(active);\r\n                                    navigator(\"/home/createcampaign/step5\");\r\n                                }\r\n                            }}>\r\n                                <CusButton text=\"Next\" textColor={\"text-white\"} background=\"bg-secondary\" width={\"w-full\"} fontwidth={\"font-bold\"}></CusButton>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Step4;"],
  "mappings": "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",
  "names": ["import_react", "ReactSwitch"]
}
