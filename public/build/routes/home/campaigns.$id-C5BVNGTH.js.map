{
  "version": 3,
  "sources": ["../../../../app/routes/home/campaigns.$id.tsx"],
  "sourcesContent": ["import { faCoins, faPaperclip, faRemove, faThumbsDown, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { Completed, Connection, Rating } from \"./brand.$id\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { UploadFile, getCampaignType } from \"~/utils\";\r\nimport { userPrefs } from \"~/cookies\";\r\n\r\n\r\nenum AcceptRequest {\r\n    None,\r\n    Panding,\r\n    Accepted,\r\n    Rejected\r\n}\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n    const platform = await axios.post(`${BaseUrl}/api/getplatform`);\r\n    const id = props.params.id;\r\n    const campaigndata = await axios.post(`${BaseUrl}/api/campaign-search`, { \"id\": id, }, {\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n    const cookieHeader = props.request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n    return json({ campaign: campaigndata.data.data[0], user: cookie.user, platform: platform.data.data });\r\n}\r\n\r\n\r\nconst Campaigns = () => {\r\n    const champaign = useLoaderData().campaign;\r\n    const user = useLoaderData().user;\r\n    const isbrand = user.role.code != 10;\r\n    const data = useLoaderData();\r\n\r\n\r\n    const userId = user.id;\r\n    const brandimage = champaign.brand == null || champaign.brand.length == 0 || champaign.brand == undefined || champaign.brand == \"\" ? \"/images/avatar/user.png\" : champaign.brand.logo == \"\" || champaign.brand.logo == null || champaign.brand.logo == \"0\" || champaign.brand.logo == undefined ? \"/images/avatar/user.png\" : champaign.brand.logo;\r\n    const brandname = champaign.brand.name;\r\n    const [category, setCategory] = useState<string>(\"\");\r\n    const [acceptreq, setAcceptreq] = useState<AcceptRequest>(AcceptRequest.None);\r\n\r\n    const [requestdata, setRequestdata] = useState<any[]>([]);\r\n\r\n    const init = async () => {\r\n        setCategory(await getCampaignType(champaign.campaignTypeId));\r\n\r\n        let req = {\r\n            \"search\": {\r\n                \"campaign\": champaign.id,\r\n                \"influencer\": userId,\r\n                \"fromUser\": userId,\r\n            }\r\n        };\r\n        const reqdata = await axios.post(`${BaseUrl}/api/search-invite`, req);\r\n        if (reqdata.data.status == true) {\r\n            if (reqdata.data.data[0].status.code == \"1\") setAcceptreq(AcceptRequest.Panding);\r\n            if (reqdata.data.data[0].status.code == \"3\") setAcceptreq(AcceptRequest.Accepted);\r\n            if (reqdata.data.data[0].status.code == \"5\") setAcceptreq(AcceptRequest.Rejected);\r\n            setRequestdata(reqdata.data.data);\r\n        } else {\r\n            setAcceptreq(AcceptRequest.None);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const [paymentBox, setPaymentBox] = useState<boolean>(false);\r\n    const [paymentError, setPaymentError] = useState<String>(\"\");\r\n    const paymentRef = useRef<HTMLInputElement>(null);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid gap-y-4 lg:gap-4 grid-cols-1 lg:grid-cols-7 mt-4 justify-start align-top content-start place-items-start place-content-start\">\r\n                <BrandInfo logo={brandimage} name={brandname} website={champaign.brand.website} info={champaign.brand.info}></BrandInfo>\r\n                <CampaignsInfo dont={champaign.donts} dos={champaign.dos} hastag={champaign.hashtags} mendtion={champaign.mentions} platform={champaign.platforms} moddboard={champaign.moodBoards} info={champaign.campaignInfo} name={champaign.campaignName} image={brandimage} website={champaign.brand.website} category={category}></CampaignsInfo>\r\n                <div className=\"lg:col-start-6 lg:col-end-8 grid gap-y-4 w-full\">\r\n                    <Budget currecny={champaign.currency.code} costperpost={champaign.costPerPost} totalbudget={champaign.totalBudget.split(\".\")[0]} remaining={\"1400\"} ></Budget>\r\n                    <Target audienceloaction={champaign.audienceLocations} minreach={champaign.minReach} maxreach={champaign.maxReach} startdate={champaign.startAt} enddate={champaign.endAt}></Target>\r\n                    {\r\n                        isbrand ?\r\n                            null\r\n                            :\r\n                            <>\r\n                                {\r\n                                    acceptreq == AcceptRequest.None ?\r\n                                        <Apply champaignId={champaign.id} touserId={champaign.brandUserId} userId={userId} influencerId={userId} fromuserId={userId}></Apply> : null\r\n                                }\r\n                                {\r\n                                    acceptreq == AcceptRequest.Panding ?\r\n                                        <Panding></Panding>\r\n                                        : null\r\n                                }\r\n                                {\r\n                                    acceptreq == AcceptRequest.Rejected ?\r\n                                        <Rejected reason={requestdata[0].status.message} champaignId={champaign.id} touserId={champaign.brandUserId} userId={userId} influencerId={userId} fromuserId={userId}></Rejected>\r\n                                        : null\r\n                                }\r\n                            </>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                acceptreq == AcceptRequest.Accepted ?\r\n                    <>\r\n                        <div className=\"flex gap-4 flex-col lg:flex-row mt-8\">\r\n                            <div className=\"grow flex-1\">\r\n                                <CreateDraft influencerId={userId} champaingId={champaign.id} platforms={data.platform}></CreateDraft>\r\n                            </div>\r\n                            <div className=\"grow flex-1\">\r\n                                <p className=\"text-md text-primary font-semibold py-1\">Live campaigns</p>\r\n                                <div className=\"w-full h-[1px] bg-slate-300\"></div>\r\n                                <div className=\"bg-white rounded-md p-4 mt-2\">\r\n                                    <div className=\"flex\">\r\n                                        <img src=\"/images/media/facebook.png\" alt=\"error\" className=\"h-10 w-10 shrink-0\" />\r\n                                        <div className=\"ml-4\">\r\n                                            <p className=\"text-primary text-sm font-semibold text-left\">Ivankbfc_Blasters</p>\r\n                                            <p className=\"text-primary text-sm font-normal text-left\">Publish date: Today</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className=\"mt-4 text-md w-full text-black font-semibold bg-[#F7941D] rounded-md shadow-lg py-1\">Link campaign</button>\r\n                                </div>\r\n                                <div className=\"bg-white rounded-md p-4 mt-2\">\r\n                                    <div className=\"flex\">\r\n                                        <img src=\"/images/media/instagram.png\" alt=\"error\" className=\"h-10 w-10 shrink-0\" />\r\n                                        <div className=\"ml-4\">\r\n                                            <p className=\"text-primary text-sm font-semibold text-left\">Ivankbfc_Blasters</p>\r\n                                            <p className=\"text-primary text-sm font-normal text-left\">Publish date: 30-01-2022</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className=\"mt-4 text-md w-full text-black font-semibold bg-[#F7941D] rounded-md shadow-lg py-1\">View insight</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grow flex-1\">\r\n                                <p className=\"text-md text-primary font-semibold py-1\">Payments</p>\r\n                                <div className=\"w-full h-[1px] bg-slate-300\"></div>\r\n\r\n                                <div className=\"rounded-xl shadow-xl bg-white p-4 w-full mt-2\">\r\n                                    <div className=\"flex\">\r\n                                        <FontAwesomeIcon icon={faCoins} className=\"text-xl text-primary\"></FontAwesomeIcon>\r\n                                        <h2 className=\"text-xl text-primary font-medium px-4\">Budget</h2>\r\n                                        <div className=\"grow\"></div>\r\n                                        <p className=\"text-md font-bold text-black\">\r\n                                            6420 USD\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"h-[1px] bg-gray-500 w-full my-2 \"></div>\r\n                                    <div className=\"flex my-2\">\r\n                                        <p className=\"text-md text-primary\">\r\n                                            Received\r\n                                        </p>\r\n                                        <div className=\"grow\"></div>\r\n                                        <p className=\"text-md font-normal text-black\">\r\n                                            2700 USD\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"flex my-2\">\r\n                                        <p className=\"text-md text-primary\">\r\n                                            Pending\r\n                                        </p>\r\n                                        <div className=\"grow\"></div>\r\n                                        <p className=\"text-md font-normal text-black\">\r\n                                            3540 USD\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"p-4 bg-white mt-2 rounded-md\">\r\n                                    <p className=\"text-normal font-semibold py-1 text-primary text-lg\">Payment request</p>\r\n                                    <button onClick={() => {\r\n                                        setPaymentBox(true);\r\n                                    }} className={`text-black bg-[#01FFF4] rounded-lg w-full text-center py-2 font-semibold text-md mt-2 ${paymentBox ? \"hidden\" : \"\"}`}>Request</button>\r\n                                    <div className={`${paymentBox ? \"\" : \"hidden\"}`}>\r\n                                        <div className=\"flex gap-x-4\"><p>Enter Amount : </p> <div><input ref={paymentRef} type=\"number\" className=\"text-black outline-none border-none rounded-md py-1 px-2 bg-gray-300 w-full\" /></div></div>\r\n                                        {(paymentError == \"\" || paymentError == null || paymentError == undefined) ? null :\r\n                                            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{paymentError}</div>\r\n                                        }\r\n                                        <button onClick={async () => {\r\n                                            if (paymentRef.current?.value == null || paymentRef.current?.value == undefined || paymentRef.current?.value == \"\") {\r\n                                                setPaymentError(\"Enter the amount\");\r\n                                            } else {\r\n                                                let req = {\r\n                                                    \"userId\": userId,\r\n                                                    \"campaignId\": champaign.id,\r\n                                                    \"amtReq\": paymentRef.current?.value,\r\n                                                }\r\n                                                const paymentdata = await axios.post(`${BaseUrl}/api/new-pay-request`, req);\r\n                                                if (!paymentdata.data.status) return setPaymentError(paymentdata.data.message);\r\n                                                return setPaymentBox(false);\r\n                                            }\r\n                                        }} className={`text-black bg-[#01FFF4] rounded-lg w-full text-center py-2 font-semibold text-md mt-2`}>Request Payment</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div >\r\n                        <UserCreatedDrafts userId={userId} campaingid={champaign.id}></UserCreatedDrafts>\r\n                    </>\r\n                    : null\r\n            }\r\n\r\n            <div className=\"my-6\">\r\n                {\r\n                    isbrand ?\r\n                        <>\r\n                            <ChampaingAcceptRequest userId={userId} campaingid={champaign.id}></ChampaingAcceptRequest>\r\n                            <div className=\"h-4\"></div>\r\n                            <DraftAcceptRequest userId={userId} campaingid={champaign.id}></DraftAcceptRequest>\r\n                            <div className=\"h-4\"></div>\r\n                            <ChampaingPaymentRequest campaingid={champaign.id} currency={user.currency.code}></ChampaingPaymentRequest>\r\n                        </>\r\n                        : null\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Campaigns;\r\n\r\ntype BrandInfoProps = {\r\n    logo: string\r\n    name: string\r\n    website: string\r\n    info: string\r\n}\r\n\r\nconst BrandInfo = (props: BrandInfoProps) => {\r\n    return (\r\n        <>\r\n            <div className=\"col-span-2 rounded-xl shadow-xl bg-white p-4 w-full\">\r\n                <div className=\"flex items-end gap-x-3\">\r\n                    <div>\r\n                        <img src={props.logo} alt=\"brand logo\" className=\"object-cover w-16 h-16 rounded\" />\r\n                    </div>\r\n                    <p className=\"text-black font-semibold text-xl content-end text-left\">{props.name}</p>\r\n                </div>\r\n                <p className=\"text-black font-semibold text-xs text-left mt-2\">Category : Consumer Electronics</p>\r\n                <p className=\"text-black font-semibold text-xs text-left\">{props.website}</p>\r\n                <h3 className=\"text-black font-bold text-md text-left\">Brand info</h3>\r\n                <p className=\"text-black font-semibold text-xs text-left\">{props.info}</p>\r\n                <div className=\"h-4\"></div>\r\n                <Rating />\r\n                <div className=\"h-4\"></div>\r\n                <Connection />\r\n                <div className=\"h-4\"></div>\r\n                <Completed />\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\ntype CampaignsInfoProps = {\r\n    name: string\r\n    image: string\r\n    category: string\r\n    website: string\r\n    info: string\r\n    moddboard: any\r\n    platform: any\r\n    dos: string\r\n    dont: string\r\n    mendtion: string\r\n    hastag: string\r\n}\r\n\r\nconst CampaignsInfo = (props: CampaignsInfoProps) => {\r\n    return (\r\n        <>\r\n            <div className=\"col-span-3 rounded-xl shadow-xl bg-white p-4 w-full\">\r\n                <div className=\"flex items-end gap-x-3\">\r\n                    <div>\r\n                        <img src={props.image} alt=\"error\" className=\"object-cover w-16 h-16 rounded\" />\r\n                    </div>\r\n                    <p className=\"text-black font-semibold text-xl content-end text-left\">{props.name}</p>\r\n                </div>\r\n\r\n                <p className=\"text-black font-semibold text-xs text-left mt-4\">Category : {props.category}</p>\r\n                <p className=\"text-black font-semibold text-xs text-left\">{props.website}</p>\r\n                <h3 className=\"text-black font-bold text-md text-left\">Campaign info</h3>\r\n                <p className=\"text-black font-semibold text-xs text-left\">\r\n                    {props.info}\r\n                </p>\r\n                <div>\r\n                    <p className=\"text-black text-left text-md font-medium mt-2\">Moodboard</p>\r\n                    <div className=\"flex gap-x-4 overflow-x-scroll no-scrollbar\">\r\n                        {\r\n                            props.moddboard.map((val: any, index: number) => {\r\n                                return (\r\n                                    <div className=\"shrink-0\" key={index}>\r\n                                        <img src={val.url} alt=\"error\" className=\"h-14 w-14 object-cover rounded-md\" />\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <p className=\"text-black text-left text-md font-medium mt-2\">Platforms</p>\r\n                <div className=\"flex items-center w-32 overflow-x-scroll no-scrollbar\">\r\n                    {\r\n                        props.platform.map((val: any, index: number) => {\r\n                            return (\r\n                                <div key={index} className=\"p-1 shrink-0 mx-1 \">\r\n                                    <img src={val[\"platformLogoUrl\"]} alt=\"error\" className=\"rounded-lg w-8 h-8\" />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"bg-gray-200  rounded-md py-2 flex justify-around w-72 mt-6\">\r\n                    <div>\r\n                        <p className=\"text-sm font-semibold\">Do's</p>\r\n                        {\r\n                            props.dos.split(\",\").map((val: any, index: number) => {\r\n                                return (\r\n                                    <p key={index} className=\"text-md font-normal\">{val}</p>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"h-10 w-[1px] bg-slate-900\"></div>\r\n                    <div>\r\n                        <p className=\"text-sm font-semibold\">Dont's</p>\r\n                        {\r\n                            props.dont.split(\",\").map((val: any, index: number) => {\r\n                                return (\r\n                                    <p key={index} className=\"text-md font-normal\">{val}</p>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <p className=\"text-sm font-semibold mt-4\">Hastags</p>\r\n                <div className=\"flex flex-nowrap gap-2 my-4\">\r\n                    {\r\n                        props.hastag.split(\",\").map((val: any, index: number) => {\r\n                            return (\r\n                                <p key={index} className=\"text-md font-normal rounded-md bg-gray-300 py-1 px-4\">#{val}</p>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n                <p className=\"text-sm font-semibold mt-4\">Mendtions</p>\r\n                <div className=\"flex flex-nowrap gap-2 my-4\">\r\n                    {\r\n                        props.mendtion.split(\",\").map((val: any, index: number) => {\r\n                            return (\r\n                                <p key={index} className=\"text-md font-normal rounded-md bg-gray-300 py-1 px-4\">@{val}</p>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\ntype TargetProps = {\r\n    audienceloaction: string\r\n    minreach: string\r\n    maxreach: string\r\n    startdate: string\r\n    enddate: string\r\n}\r\n\r\nconst Target = (props: TargetProps) => {\r\n    return (\r\n        <>\r\n            <div className=\"rounded-xl shadow-xl bg-white p-4 w-full\">\r\n                <div className=\"flex\">\r\n                    <FontAwesomeIcon icon={faCoins} className=\"text-xl text-primary\"></FontAwesomeIcon>\r\n                    <h2 className=\"text-xl text-primary font-medium px-4\">Target</h2>\r\n                </div>\r\n                <div className=\"h-[1px] bg-gray-500 w-full my-2\"></div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        Audience loaction\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-primary\">\r\n                        {props.audienceloaction}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        Min Reach\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-black\">\r\n                        {props.minreach}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        Max Reach\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-black\">\r\n                        {props.maxreach}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        Start Date\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-black\">\r\n                        {props.startdate}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        End date\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-black\">\r\n                        {props.enddate}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\ntype ApplyProps = {\r\n    userId: string\r\n    influencerId: string\r\n    fromuserId: string\r\n    touserId: string\r\n    champaignId: string\r\n}\r\n\r\nconst Apply = (props: ApplyProps) => {\r\n    const [open, setOpen] = useState(false);\r\n    const onOpenModal = () => setOpen(true);\r\n    const onCloseModal = () => setOpen(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const messageRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    const applyChampaign = async () => {\r\n        if (messageRef.current?.value == null || messageRef.current?.value == undefined || messageRef.current?.value == \"\") return setError(\"Message can't be blank\");\r\n        let req = {\r\n            \"campaignId\": props.champaignId,\r\n            \"influencerId\": props.influencerId,\r\n            \"fromUserId\": props.fromuserId,\r\n            \"toUserId\": props.touserId,\r\n            \"inviteMessage\": messageRef.current?.value\r\n        };\r\n\r\n        const data = await axios.post(`${BaseUrl}/api/add-invite`, req);\r\n        if (data.data.status == false) {\r\n            setError(data.data.message);\r\n        } else {\r\n            messageRef!.current!.value = \"\";\r\n            onCloseModal();\r\n        }\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"p-4 rounded-xl shadow-xl bg-primary\">\r\n                <h1 className=\"text-white text-xl text-left font-normal\">\r\n                    Would you like to participate in this campaign?\r\n                </h1>\r\n                <div className=\"w-full grid place-items-center\" onClick={onOpenModal}>\r\n                    <CusButton text=\"Apply\" textColor={\"text-white\"} background={\"bg-secondary\"}></CusButton>\r\n                </div>\r\n            </div>\r\n            <div className={`w-full h-screen bg-gray-500 fixed top-0 left-0 bg-opacity-30 grid place-items-center ${open ? \"fixed\" : \"hidden\"} `}>\r\n                <div className=\"p-6 bg-white rounded-xl shadow-xl w-96\">\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow\"></div>\r\n                        <div onClick={onCloseModal}>\r\n                            <FontAwesomeIcon icon={faRemove} className=\"font-bold text-2xl text-center text-primary\"></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <h1 className=\"text-primary text-lg font-bold text-left\">Connect</h1>\r\n                    <p className=\"text-lg font-normal\">Subject : Applay for campaign</p>\r\n                    <textarea ref={messageRef} className=\"p-4 w-full h-40 outline-none border-2 bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none mt-4\" placeholder=\"message\" ></textarea>\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow\"></div>\r\n                        <div onClick={applyChampaign}>\r\n                            <CusButton text=\"send\" background=\"bg-primary\" textColor={\"text-white\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\ntype BudgetProps = {\r\n    costperpost: string\r\n    totalbudget: string\r\n    remaining: string\r\n    currecny: string\r\n}\r\n\r\nconst Budget = (props: BudgetProps) => {\r\n    return (\r\n        <>\r\n            <div className=\"rounded-xl shadow-xl bg-white p-4 w-full\">\r\n                <div className=\"flex\">\r\n                    <FontAwesomeIcon icon={faCoins} className=\"text-xl text-primary\"></FontAwesomeIcon>\r\n                    <h2 className=\"text-xl text-primary font-medium px-4\">Budget</h2>\r\n                </div>\r\n                <div className=\"h-[1px] bg-gray-500 w-full my-2 \"></div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        Cost per post\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-primary\">\r\n                        {props.costperpost} {props.currecny}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        Total budget\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-black\">\r\n                        {props.totalbudget} {props.currecny}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex my-2\">\r\n                    <p className=\"text-md text-primary\">\r\n                        Remaining\r\n                    </p>\r\n                    <div className=\"grow\"></div>\r\n                    <p className=\"text-md font-bold text-black\">\r\n                        {props.remaining} {props.currecny}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Panding = () => {\r\n    return (\r\n        <>\r\n            <div className=\"p-4 rounded-xl shadow-xl bg-primary\">\r\n                <h1 className=\"text-white text-xl text-left font-normal\">\r\n                    Your request in progress..\r\n                </h1>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\ntype ChampaingAcceptRequestProps = {\r\n    campaingid: string,\r\n    userId: string\r\n}\r\n\r\n\r\nconst ChampaingAcceptRequest = (props: ChampaingAcceptRequestProps) => {\r\n    const [resinvite, setRequestinvite] = useState<any[]>([]);\r\n    const [acceptbox, setAcceptbox] = useState<boolean>(false);\r\n    const [rejectbox, setrejectbox] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const rejectiontextRef = useRef<HTMLInputElement>(null);\r\n    const [id, setId] = useState<string | null>(null);\r\n\r\n    const init = async () => {\r\n        let req = {\r\n            \"search\": {\r\n                \"status\": \"1\",\r\n                \"campaign\": props.campaingid,\r\n                \"toUser\": props.userId,\r\n            }\r\n        };\r\n        const responseData = await axios.post(`${BaseUrl}/api/search-invite`, req);\r\n        if (responseData.data.status == true) {\r\n            setRequestinvite(responseData.data.data);\r\n        }\r\n    }\r\n\r\n    const acceptRequest = async () => {\r\n        let req = { \"id\": id, \"status\": \"3\" };\r\n        const responseData = await axios.post(`${BaseUrl}/api/update-invite`, req);\r\n        if (responseData.data.staus == false) return setError(responseData.data.message);\r\n        setAcceptbox(false);\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    const rejectRequest = async () => {\r\n        if (rejectiontextRef.current?.value == null || rejectiontextRef.current?.value == undefined || rejectiontextRef.current?.value == \"\") return setError(\"Fell the reason.\");\r\n        let req = { \"id\": id, \"status\": \"5\", \"rejectReason\": rejectiontextRef.current?.value };\r\n        const responseData = await axios.post(`${BaseUrl}/api/update-invite`, req);\r\n        if (responseData.data.staus == false) return setError(responseData.data.message);\r\n        rejectiontextRef.current!.value == \"\";\r\n        setrejectbox(false);\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={`fixed top-0 left-0  h-screen w-full bg-slate-900 bg-opacity-10 place-items-center ${acceptbox ? \"grid\" : \"hidden\"}`}>\r\n                <div className=\"bg-white w-72 shadow-lg p-4 rounded-lg\">\r\n                    <p className=\"text-center font-medium text-2xl\">Accept</p>\r\n                    <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                    <p className=\"text-center font-medium text-gray-800\">Are you sure you want to accept this?</p>\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div className=\"flex mt-2\">\r\n                        <button onClick={() => { setAcceptbox(false); }} className=\"bg-white rounded-xl text-red-500 font-normal border-2 border-red-500 py-1 px-2 w-28 hover:text-white hover:bg-red-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsDown}></FontAwesomeIcon>Cancel</button>\r\n                        <div className=\"grow\"></div>\r\n                        <button onClick={acceptRequest} className=\"bg-white rounded-xl text-green-500 font-normal border-2 border-green-500 py-1 px-2 w-28 hover:text-white hover:bg-green-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsUp}></FontAwesomeIcon>Accept</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`fixed top-0 left-0  h-screen w-full bg-slate-900 bg-opacity-10 place-items-center ${rejectbox ? \"grid\" : \"hidden\"}`}>\r\n                <div className=\"bg-white w-72 shadow-lg p-4 rounded-lg\">\r\n                    <p className=\"text-center font-medium text-2xl\">Reject</p>\r\n                    <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                    <input ref={rejectiontextRef} type=\"text\" className=\"w-full bg-gray-200 rounded-lg  px-2 py-1 my-2 outline-none\" placeholder=\"Enter the reason of rejection.\" />\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div className=\"flex mt-2\">\r\n                        <button onClick={() => { setrejectbox(false); }} className=\"bg-white rounded-xl text-red-500 font-normal border-2 border-red-500 py-1 px-2 w-28 hover:text-white hover:bg-red-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsDown}></FontAwesomeIcon>Cancel</button>\r\n                        <div className=\"grow\"></div>\r\n                        <button onClick={rejectRequest} className=\"bg-white rounded-xl text-green-500 font-normal border-2 border-green-500 py-1 px-2 w-28 hover:text-white hover:bg-green-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsUp}></FontAwesomeIcon>Reject</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-4 rounded-xl shadow-xl bg-white\">\r\n                {\r\n                    resinvite.length == 0 ?\r\n                        <div>No Invite request is panding</div>\r\n                        :\r\n                        <div>\r\n                            <p className=\"text-md font-medium\">Requested Invites</p>\r\n                            <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                            <div className=\"grid mt-4 place-items-center md:place-items-start grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                                {\r\n                                    resinvite.map((val: any, index: number) => {\r\n                                        return <div key={index} className=\"p-4 bg-white rounded-lg shadow-lg\">\r\n                                            <div className=\"flex\">\r\n                                                <img src={val.influencer.pic} alt=\"influencer pic\" className=\"w-10 h-10 shrink-0 rounded-md\" />\r\n                                                <div className=\"ml-2\">\r\n                                                    <p className=\"text-md font-medium\">{val.influencer.name}</p>\r\n                                                    <p className=\"text-sm font-medium\">{val.influencer.email}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <p className=\"mt-2 text-md font-medium\">Message</p>\r\n                                            <p className=\"text-sm font-medium\">{val.inviteMessage}</p>\r\n                                            <div className=\"flex gap-4 mt-2\">\r\n                                                <button onClick={() => {\r\n                                                    setId(val.id);\r\n                                                    setAcceptbox(true);\r\n                                                }} className=\"bg-white  text-green-500 font-normal border-2 border-green-500 py-1 px-2 w-28 hover:text-white hover:bg-green-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsUp}></FontAwesomeIcon>Accept</button>\r\n                                                <button onClick={() => {\r\n                                                    setId(val.id);\r\n                                                    setrejectbox(true)\r\n                                                }} className=\"bg-white  text-red-500 font-normal border-2 border-red-500 py-1 px-2 w-28 hover:text-white hover:bg-red-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsDown}></FontAwesomeIcon>Reject</button>\r\n                                            </div>\r\n                                            <div>\r\n                                            </div>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\ntype DraftAcceptRequestProps = {\r\n    campaingid: string,\r\n    userId: string\r\n}\r\n\r\n\r\nconst DraftAcceptRequest = (props: DraftAcceptRequestProps) => {\r\n    const [resinvite, setRequestinvite] = useState<any[]>([]);\r\n\r\n    const [acceptbox, setAcceptbox] = useState<boolean>(false);\r\n    const [rejectbox, setrejectbox] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const rejectiontextRef = useRef<HTMLInputElement>(null);\r\n    const [id, setId] = useState<string | null>(null);\r\n\r\n    const init = async () => {\r\n        let req = {\r\n            \"search\": {\r\n                \"status\": \"1\",\r\n                \"campaign\": props.campaingid,\r\n                \"toUser\": props.userId,\r\n            }\r\n        };\r\n        const responseData = await axios.post(`${BaseUrl}/api/search-draft`, req);\r\n        if (responseData.data.status == true) {\r\n            setRequestinvite(responseData.data.data);\r\n        }\r\n    }\r\n\r\n    const acceptRequest = async () => {\r\n        let req = { \"id\": id, \"status\": \"3\" };\r\n        const responseData = await axios.post(`${BaseUrl}/api/update-draft`, req);\r\n        if (responseData.data.staus == false) return setError(responseData.data.message);\r\n        setAcceptbox(false);\r\n        window.location.reload();\r\n    }\r\n\r\n    const rejectRequest = async () => {\r\n        if (rejectiontextRef.current?.value == null || rejectiontextRef.current?.value == undefined || rejectiontextRef.current?.value == \"\") return setError(\"Fell the reason.\");\r\n        let req = { \"id\": id, \"status\": \"5\", \"rejectReason\": rejectiontextRef.current?.value };\r\n        const responseData = await axios.post(`${BaseUrl}/api/update-draft`, req);\r\n        if (responseData.data.staus == false) return setError(responseData.data.message);\r\n        rejectiontextRef.current!.value == \"\";\r\n        setrejectbox(false);\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={`fixed top-0 left-0  h-screen w-full bg-slate-900 bg-opacity-10 place-items-center ${acceptbox ? \"grid\" : \"hidden\"}`}>\r\n                <div className=\"bg-white w-72 shadow-lg p-4 rounded-lg\">\r\n                    <p className=\"text-center font-medium text-2xl\">Accept</p>\r\n                    <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                    <p className=\"text-center font-medium text-gray-800\">Are you sure you want to accept this draft?</p>\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div className=\"flex mt-2\">\r\n                        <button onClick={() => { setAcceptbox(false); }} className=\"bg-white rounded-xl text-red-500 font-normal border-2 border-red-500 py-1 px-2 w-28 hover:text-white hover:bg-red-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsDown}></FontAwesomeIcon>Cancel</button>\r\n                        <div className=\"grow\"></div>\r\n                        <button onClick={acceptRequest} className=\"bg-white rounded-xl text-green-500 font-normal border-2 border-green-500 py-1 px-2 w-28 hover:text-white hover:bg-green-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsUp}></FontAwesomeIcon>Accept</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`fixed top-0 left-0  h-screen w-full bg-slate-900 bg-opacity-10 place-items-center ${rejectbox ? \"grid\" : \"hidden\"}`}>\r\n                <div className=\"bg-white w-72 shadow-lg p-4 rounded-lg\">\r\n                    <p className=\"text-center font-medium text-2xl\">Reject</p>\r\n                    <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                    <input ref={rejectiontextRef} type=\"text\" className=\"w-full bg-gray-200 rounded-lg  px-2 py-1 my-2 outline-none\" placeholder=\"Enter the reason of rejection.\" />\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div className=\"flex mt-2\">\r\n                        <button onClick={() => { setrejectbox(false); }} className=\"bg-white rounded-xl text-red-500 font-normal border-2 border-red-500 py-1 px-2 w-28 hover:text-white hover:bg-red-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsDown}></FontAwesomeIcon>Cancel</button>\r\n                        <div className=\"grow\"></div>\r\n                        <button onClick={rejectRequest} className=\"bg-white rounded-xl text-green-500 font-normal border-2 border-green-500 py-1 px-2 w-28 hover:text-white hover:bg-green-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsUp}></FontAwesomeIcon>Reject</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-4 rounded-xl shadow-xl bg-white\">\r\n                {\r\n                    resinvite.length == 0 ?\r\n                        <div>No draft request is panding</div>\r\n                        :\r\n                        <div>\r\n                            <p className=\"text-md font-medium\">Requested drafts</p>\r\n                            <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                            <div className=\"grid mt-4 place-items-center md:place-items-start grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                                {\r\n                                    resinvite.map((val: any, index: number) => {\r\n                                        return <div key={index} className=\"p-4 bg-white rounded-lg shadow-lg\">\r\n                                            <div className=\"flex\">\r\n                                                <img src={val.influencer.pic} alt=\"influencer pic\" className=\"w-10 h-10 shrink-0 rounded-md\" />\r\n                                                <div className=\"ml-2\">\r\n                                                    <p className=\"text-md font-medium\">{val.influencer.name.split(\"@\")[0]}</p>\r\n                                                    <p className=\"text-sm font-medium\">{val.influencer.email}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <p className=\"mt-2 text-md font-medium\">Description</p>\r\n                                            <p className=\"text-sm font-medium\">{val.description}</p>\r\n                                            <p className=\"mt-2 text-md font-medium\">Attachment</p>\r\n                                            <a target=\"_blank\" className=\"mt-2 text-sm font-normal border-2 border-blue-500 inline-block my-2 py-1 px-4  text-blue-500 hover:text-white hover:bg-blue-500\" href={val.attach01}>View pdf</a>\r\n                                            <div className=\"flex gap-4 mt-2\">\r\n                                                <button onClick={() => {\r\n                                                    setId(val.id);\r\n                                                    setAcceptbox(true);\r\n                                                }} className=\"bg-white  text-green-500 font-normal border-2 border-green-500 py-1 px-2 w-28 hover:text-white hover:bg-green-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsUp}></FontAwesomeIcon>Accept</button>\r\n                                                <button onClick={() => {\r\n                                                    setId(val.id);\r\n                                                    setrejectbox(true)\r\n                                                }} className=\"bg-white  text-red-500 font-normal border-2 border-red-500 py-1 px-2 w-28 hover:text-white hover:bg-red-500\"><FontAwesomeIcon className=\"mx-2\" icon={faThumbsDown}></FontAwesomeIcon>Reject</button>\r\n                                            </div>\r\n                                            <div>\r\n                                            </div>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\ntype RejectedProps = {\r\n    userId: string\r\n    influencerId: string\r\n    fromuserId: string\r\n    touserId: string\r\n    champaignId: string\r\n    reason: string\r\n}\r\n\r\nconst Rejected = (props: RejectedProps) => {\r\n    const [open, setOpen] = useState(false);\r\n    const onOpenModal = () => setOpen(true);\r\n    const onCloseModal = () => setOpen(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const messageRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    const applyChampaign = async () => {\r\n        if (messageRef.current?.value == null || messageRef.current?.value == undefined || messageRef.current?.value == \"\") return setError(\"Message can't be blank\");\r\n        let req = {\r\n            \"campaignId\": props.champaignId,\r\n            \"influencerId\": props.influencerId,\r\n            \"fromUserId\": props.fromuserId,\r\n            \"toUserId\": props.touserId,\r\n            \"inviteMessage\": messageRef.current?.value\r\n        };\r\n\r\n        const data = await axios.post(`${BaseUrl}/api/add-invite`, req);\r\n        if (data.data.status == false) {\r\n            setError(data.data.message);\r\n        } else {\r\n            messageRef!.current!.value = \"\";\r\n            onCloseModal();\r\n        }\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"p-4 rounded-xl shadow-xl bg-primary\">\r\n                <h1 className=\"text-white text-xl text-left font-normal\">\r\n                    Your request has been rejected..\r\n                </h1>\r\n                <p className=\"text-white font-normal text-md\">Reason : {props.reason}</p>\r\n                <div className=\"w-full grid place-items-center\" onClick={onOpenModal}>\r\n                    <CusButton text=\"Apply again!\" textColor={\"text-white\"} background={\"bg-secondary\"}></CusButton>\r\n                </div>\r\n            </div>\r\n            <div className={`w-full h-screen bg-gray-500 fixed top-0 left-0 bg-opacity-30 grid place-items-center ${open ? \"fixed\" : \"hidden\"} `}>\r\n                <div className=\"p-6 bg-white rounded-xl shadow-xl w-96\">\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow\"></div>\r\n                        <div onClick={onCloseModal}>\r\n                            <FontAwesomeIcon icon={faRemove} className=\"font-bold text-2xl text-center text-primary\"></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <h1 className=\"text-primary text-lg font-bold text-left\">Connect</h1>\r\n                    <p className=\"text-lg font-normal\">Subject : Applay for campaign</p>\r\n                    <textarea ref={messageRef} className=\"p-4 w-full h-40 outline-none border-2 bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none mt-4\" placeholder=\"message\" ></textarea>\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow\"></div>\r\n                        <div onClick={applyChampaign}>\r\n                            <CusButton text=\"send\" background=\"bg-primary\" textColor={\"text-white\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\ntype CreateDraftProps = {\r\n    platforms: any[]\r\n    influencerId: string\r\n    champaingId: string\r\n}\r\n\r\n\r\nconst CreateDraft = (props: CreateDraftProps) => {\r\n    const datepicker = useRef<HTMLInputElement | null>(null);\r\n    const inputFile = useRef<HTMLInputElement | null>(null);\r\n    const descraption = useRef<HTMLTextAreaElement | null>(null);\r\n    const [pdfFile, setPdfFile] = useState<File>();\r\n    const [platform, setPlatform] = useState<any>(null);\r\n    const [createbox, setCreatebox] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n    return (\r\n        <>\r\n            <p className=\"text-md text-primary font-semibold py-1\">Campaign draft</p>\r\n            <div className=\"w-full h-[1px] bg-slate-300\"></div>\r\n            {\r\n                createbox ?\r\n                    <>\r\n                        <div className=\"p-4 bg-white mt-2 rounded-md\">\r\n                            <p className=\"text-sm text-normal font-semibold py-1 text-primary\">Create campaign draft</p>\r\n                            <div className=\"flex gap-2 mt-2 overflow-x-scroll no-scrollbar py-4\">\r\n                                {props.platforms.map((val: any, i: number) => {\r\n                                    return (\r\n                                        <div key={i} className={`shrink-0  p-2 rounded-lg ${platform == val.id ? \"bg-white shadow-xl \" : \"bg-gray-200\"} `} onClick={() => {\r\n                                            setPlatform(val.id);\r\n                                        }}>\r\n                                            <img src={props.platforms[i][\"platformLogoUrl\"]} alt=\"error\" className=\"w-10 h-10\" />\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"bg-[#EEEEEE] w-full h-10 rounded-lg flex items-center pl-4\">\r\n                                <h3 className=\"text-black font-semibold  text-md\">{pdfFile == null ? \"\" : pdfFile.name}</h3>\r\n                                <div className=\"grow\"></div>\r\n                                <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg cursor-pointer h-full\" onClick={() => { inputFile!.current!.click() }}>\r\n                                    <FontAwesomeIcon icon={faPaperclip}></FontAwesomeIcon>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"hidden\">\r\n                                <input ref={inputFile} type=\"file\" accept=\"application/pdf\" onChange={(value) => {\r\n                                    let file_size = parseInt(((value!.target.files![0].size / 1024) / 1024).toString());\r\n                                    if (file_size < 2) {\r\n                                        setError(null);\r\n                                        setPdfFile(value!.target.files![0]);\r\n                                    } else {\r\n                                        setError(\"Pdf file size must be less then 4 mb\");\r\n                                    }\r\n                                }} />\r\n                            </div>\r\n                            <input type={\"date\"} ref={datepicker} className=\"bg-[#EEEEEE] outline-none border-none rounded-lg focus:border-gray-300 mt-4 w-full p-2\"></input>\r\n                            <textarea ref={descraption} className=\"focus:border-none focus:outline-none mt-4 p-4 w-full h-20 outline-none border-2 bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\" placeholder=\"description...\" ></textarea>\r\n                            {(error == \"\" || error == null || error == undefined) ? null :\r\n                                <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                            }\r\n                            <button onClick={async () => {\r\n                                if (platform == null || platform == undefined || platform == 0 || platform == \"\") {\r\n                                    setError(\"Select the platform.\");\r\n                                }\r\n                                else if (pdfFile == null || pdfFile == undefined) {\r\n                                    setError(\"Select the pdf file.\");\r\n                                } else if (datepicker.current?.value == null || datepicker.current?.value == undefined || datepicker.current?.value == \"\") {\r\n                                    setError(\"Select the date.\");\r\n                                } else if (descraption.current?.value == null || descraption.current?.value == undefined || descraption.current?.value == \"\") {\r\n                                    setError(\"Write the description.\");\r\n                                }\r\n                                const pdfurl = await UploadFile(pdfFile!);\r\n\r\n                                let req = {\r\n                                    \"campaignId\": props.champaingId,\r\n                                    \"influencerId\": props.influencerId,\r\n                                    \"handleId\": platform,\r\n                                    \"publishAt\": datepicker.current?.value,\r\n                                    \"attach01\": pdfurl,\r\n                                    \"description\": descraption.current?.value\r\n                                };\r\n                                const data = await axios({\r\n                                    method: 'post',\r\n                                    url: `${BaseUrl}/api/add-draft`,\r\n                                    data: req,\r\n                                });\r\n                                if (data.data.status == false) {\r\n                                    return setError(data.data.message);\r\n                                } else {\r\n                                    setError(null);\r\n                                    return setCreatebox(false);\r\n                                }\r\n                            }} className=\"text-white bg-primary rounded-lg w-full text-center py-2 font-semibold text-md mt-2\">Submit</button>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n\r\n                        <div className=\"p-4 bg-white mt-2 rounded-md\">\r\n                            <p className=\"text-sm text-normal font-semibold py-1 text-primary\">Create campaign draft</p>\r\n                            <button onClick={() => {\r\n                                setCreatebox(true);\r\n                            }} className=\"text-white bg-primary rounded-lg w-full text-center py-2 font-semibold text-md mt-2\">Create</button>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\ntype ChampaingPaymentRequestProps = {\r\n    campaingid: string,\r\n    currency: string\r\n}\r\n\r\n\r\nconst ChampaingPaymentRequest = (props: ChampaingPaymentRequestProps) => {\r\n    const [respayment, setRequestPayment] = useState<any[]>([]);\r\n\r\n    const init = async () => {\r\n        let req = {\r\n            \"search\": {\r\n                \"campaign\": props.campaingid,\r\n            }\r\n        };\r\n        const responseData = await axios.post(`${BaseUrl}/api/get-req-pay`, req);\r\n        if (responseData.data.status == true) {\r\n            setRequestPayment(responseData.data.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-4 rounded-xl shadow-xl bg-white\">\r\n                {\r\n                    respayment.length == 0 ?\r\n                        <div>No Invite request is panding</div> :\r\n                        <div>\r\n                            <p className=\"text-md font-medium\">Requested Invites</p>\r\n                            <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                            <div className=\"grid mt-4 place-items-center md:place-items-start grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                                {\r\n                                    respayment.map((val: any, index: number) => {\r\n                                        return <div key={index} className=\"p-4 bg-white rounded-lg shadow-lg\">\r\n                                            <p className=\"mt-2 text-md font-medium\">Requested by</p>\r\n                                            <div className=\"w-full h-[2px] bg-gray-700\"></div>\r\n                                            <div className=\"flex mt-4\">\r\n                                                <img src={val.influencer.pic} alt=\"influencer pic\" className=\"w-10 h-10 shrink-0 rounded-md\" />\r\n                                                <div className=\"ml-2\">\r\n                                                    <p className=\"text-md font-medium\">{val.influencer.name.split(\"@\")[0]}</p>\r\n                                                    <p className=\"text-sm font-medium\">{val.influencer.email}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <p className=\"mt-2 text-md font-medium\">Ammount</p>\r\n                                            <p className=\"text-sm font-medium\">{val.amount} {props.currency}</p>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\ntype UserCreatedDraftsProps = {\r\n    campaingid: string,\r\n    userId: string\r\n}\r\n\r\n\r\nconst UserCreatedDrafts = (props: UserCreatedDraftsProps) => {\r\n    const [resDarft, setResDarft] = useState<any[]>([]);\r\n\r\n    const init = async () => {\r\n        let req = {\r\n            \"search\": {\r\n                \"fromUser\": props.userId,\r\n                \"campaign\": props.campaingid,\r\n                \"influencer\": props.userId,\r\n            }\r\n        };\r\n\r\n\r\n        const responseData = await axios.post(`${BaseUrl}/api/search-draft`, req);\r\n        if (responseData.data.status == true) {\r\n            setResDarft(responseData.data.data);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-4 rounded-xl shadow-xl bg-white my-4\">\r\n                {\r\n                    resDarft.length == 0 ?\r\n                        <div>You haven't created any drafts yet.</div>\r\n                        :\r\n                        <div>\r\n                            <p className=\"text-md font-medium\">User Created draft</p>\r\n                            <div className=\"w-full bg-gray-400 h-[1px] my-2\"></div>\r\n                            <div className=\"grid mt-4 place-items-center lg:place-items-start grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                                {\r\n                                    resDarft.map((val: any, index: number) => {\r\n                                        return <div key={index} className=\"my-2 p-4 bg-white rounded-lg shadow-lg\">\r\n                                            <div className=\"flex\">\r\n                                                <img src={val.influencer.pic} alt=\"influencer pic\" className=\"w-10 h-10 shrink-0 rounded-md\" />\r\n                                                <div className=\"ml-2\">\r\n                                                    <p className=\"text-md font-medium\">{val.influencer.name.split(\"@\")[0]}</p>\r\n                                                    <p className=\"text-sm font-medium\">{val.influencer.email}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <p className=\"mt-2 text-md font-medium\">Description</p>\r\n                                            <p className=\"text-sm font-medium\">{val.description}</p>\r\n                                            <p className=\"mt-2 text-md font-medium\">Attachment</p>\r\n                                            <a target=\"_blank\" className=\"mt-2 text-sm font-normal border-2 border-blue-500 inline-block my-2 py-1 px-4  text-blue-500 hover:text-white hover:bg-blue-500\" href={val.attach01}>View pdf</a>\r\n                                            <p className=\"mt-2 text-md font-medium\">Status</p>\r\n                                            <p className={`mt-2 text-md text-white font-medium text-center rounded-md ${val.status.name == \"ACCEPTED\" ? \"bg-green-500\" : val.status.name == \"PENDING\" ? \"bg-yellow-500\" : \"bg-red-500\"}`}>{val.status.name}</p>\r\n                                        </div>\r\n\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
