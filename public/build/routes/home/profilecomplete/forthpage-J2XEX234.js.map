{
  "version": 3,
  "sources": ["../../../../../app/routes/home/profilecomplete/forthpage.tsx"],
  "sourcesContent": ["import { faAdd, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ActionArgs, ActionFunction, LoaderArgs, LoaderFunction, json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useLoaderData, useLocation, useNavigate } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport UserInputStore from \"~/state/user/firstinput\";\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n\r\n    const cookieHeader = props.request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n    const country = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/getcountry`,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n\r\n    return json({ user: cookie.user, country: country.data.data });\r\n}\r\n\r\n\r\n\r\nconst ForthPage = () => {\r\n\r\n    const userdata = useLoaderData();\r\n    const userId: string = userdata.user.id\r\n    const country = userdata.country;\r\n    const gender: String[] = [\"MALE\", \"FEMALE\", \"TRANSGENDER\"];\r\n    const isBrand = userdata.user.role[\"code\"] == \"50\" ? true : false;\r\n\r\n    const [selCountry, setSelCountry] = useState<any[]>([]);\r\n    const [con, setcon] = useState<boolean>(false);\r\n\r\n    const [selGender, setSelGender] = useState<any[]>([]);\r\n    const [gen, setgen] = useState<boolean>(false);\r\n\r\n\r\n    const [error, setError] = useState<String>(\"\");\r\n    const [cityerror, setCityerror] = useState<string | null>(null);\r\n    const [citybox, setCitybox] = useState<boolean>(false);\r\n    const [searchcity, setSearchcity] = useState<any[]>([]);\r\n    const [selectedcity, setSelectedctiy] = useState<any>(null);\r\n\r\n\r\n    const [contactnumber, setContactnumber] = useState<number>()\r\n    const handelcontent = (e: any) => {\r\n        setContactnumber(e.target.value.replace(/\\D/g, ''));\r\n    }\r\n\r\n    let cityref = useRef<HTMLInputElement | null>(null);\r\n    const getCity = async (city: String) => {\r\n        const data = await axios.post(`${BaseUrl}/api/get-city`, { \"search\": city });\r\n        setSearchcity(data.data.data);\r\n    }\r\n\r\n    const setIndex = UserInputStore((state) => state.setIndex);\r\n    const navigate = useNavigate();\r\n    const [check, setCheck] = useState<boolean>(false);\r\n    const handleOnChange = () => {\r\n        setCheck(!check);\r\n    };\r\n    const nextButton = useRef<HTMLButtonElement>(null);\r\n\r\n    return (\r\n        <>\r\n            <div className={`w-full h-screen bg-black bg-opacity-25 fixed top-0 left-0  place-items-center ${citybox ? \"grid\" : \"hidden\"}`}>\r\n                <div className=\"bg-white shadow-md w-80 rounded-lg p-4\">\r\n                    {\r\n                        searchcity.length == 0 ?\r\n                            <div className=\"min-h-96\">\r\n                                <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">No city found with this name</div>\r\n                                <button className=\"px-2 mx-auto bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\" onClick={() => {\r\n                                    setCitybox(false)\r\n                                }}>Close</button>\r\n                            </div>\r\n                            :\r\n                            <div className=\"h-72 overflow-y-scroll no-scrollbar\">\r\n                                {\r\n                                    searchcity.map((value: any, index: number) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div onClick={() => {\r\n                                                    setSelectedctiy(value);\r\n                                                    setCitybox(false);\r\n                                                    cityref!.current!.value = \"\";\r\n                                                }} key={index} className=\"my-6 cursor-pointer bg-white rounded-md py-1 border-2 text-center font-normal text-md hover:border-emerald-500\">{value[\"name\"]} - {value[\"code\"]}</div>\r\n                                            </>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"p-8 w-full\">\r\n                <div className=\"flex w-full\">\r\n                    <div className=\"w-full\">\r\n                        {/* country start here */}\r\n                        <p className=\"text-black text-left font-normal text-lg mt-4\">Country</p>\r\n                        <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                            <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                                {selCountry.map((value: any, i: number) => {\r\n                                    return (\r\n                                        <div key={i} className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\">\r\n                                            <h1 className=\" text-black font-semibold text-center w-40\">\r\n                                                {`${value[\"name\"]} - [${value[\"code\"]}]`}\r\n                                            </h1>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"grow\"></div>\r\n                            <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\" onClick={() => {\r\n                                setcon(true);\r\n                            }}>\r\n                                <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${con ? \"\" : \"hidden\"} grid place-items-center`}>\r\n                            <div className=\"bg-white p-10 cursor-pointer\">\r\n                                <div className=\"min-h-80 overflow-y-scroll no-scrollbar w-80\">\r\n                                    {country.map((val: any, i: number) => {\r\n                                        return (\r\n                                            <h1 onClick={() => {\r\n                                                if (selCountry.includes(val)) {\r\n                                                    let addcur = selCountry.filter((data) => data != val);\r\n                                                    setSelCountry(addcur);\r\n                                                } else {\r\n                                                    setSelCountry([val]);\r\n                                                }\r\n                                            }} key={i} className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selCountry.includes(val) ? \"border-green-500 text-green-500\" : \"border-gray-800 text-black\"}  no-scrollbar`}>{val[\"code\"]} - {val[\"name\"]}</h1>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                                <div onClick={() => {\r\n                                    setcon(false);\r\n                                }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center\">Close</div>\r\n                            </div>\r\n                        </div>\r\n                        {/* country end here */}\r\n\r\n                        {/* Gender start here */}\r\n                        <p className=\"text-black text-left font-normal text-lg  mt-4\">Gender</p>\r\n                        <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                            <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                                {selGender.map((value: any, i: number) => {\r\n                                    return (\r\n                                        <div key={i} className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\">\r\n                                            <h1 className=\" text-black font-semibold text-center w-40\">\r\n                                                {value}\r\n                                            </h1>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"grow\"></div>\r\n                            <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\" onClick={() => {\r\n                                setgen(true);\r\n                            }}>\r\n                                <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${gen ? \"\" : \"hidden\"} grid place-items-center`}>\r\n                            <div className=\"bg-white p-10 cursor-pointer\">\r\n                                <div className=\"min-h-80 overflow-y-scroll no-scrollbar w-80\">\r\n                                    {gender.map((val: any, i: number) => {\r\n                                        return (\r\n                                            <h1 onClick={() => {\r\n                                                if (selGender.includes(val)) {\r\n                                                    let addcur = selGender.filter((data) => data != val);\r\n                                                    setSelGender(addcur);\r\n                                                } else {\r\n                                                    setSelGender([val]);\r\n                                                }\r\n                                            }} key={i} className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selGender.includes(val) ? \"border-green-500 text-green-500\" : \"border-gray-800 text-black\"}  no-scrollbar`}>{val}</h1>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                                <div onClick={() => {\r\n                                    setgen(false);\r\n                                }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center\">Close</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Gender end here */}\r\n                        <p className=\"text-black text-left font-normal text-lg  mt-4\">City</p>\r\n                        <div className=\"w-full bg-[#EEEEEE] rounded-md flex p-2\">\r\n                            <div className=\"grow\">\r\n                                <input ref={cityref} className=\"h-full w-full outline-none focus:border-gray-300 bg-transparent\" />\r\n                            </div>\r\n                            <div className=\"bg-white text-bold p-2 rounded-md grid place-items-center w-8 h-8 cursor-pointer\" onClick={() => {\r\n                                if (cityref.current?.value == null || cityref.current?.value == undefined || cityref.current?.value == \"\") {\r\n                                    setCityerror(\"Enter the city name\");\r\n                                } else {\r\n                                    setCitybox(true);\r\n                                    setCityerror(null);\r\n                                    getCity(cityref.current?.value ?? \"\");\r\n                                }\r\n                            }}>\r\n                                <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n                            </div>\r\n                        </div>\r\n                        {(cityerror == \"\" || cityerror == null || cityerror == undefined) ? null :\r\n                            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{cityerror}</div>\r\n                        }\r\n                        {(selectedcity == \"\" || selectedcity == null || selectedcity == undefined) ? null :\r\n                            <div className=\"bg-white bg-opacity-10 border-2 text-center border-black rounded-md text-black text-md font-normal text-md my-4\">{selectedcity[\"name\"]} - {selectedcity[\"code\"]}</div>\r\n                        }\r\n                        <p className=\"text-black text-left font-normal text-lg  mt-4\">Phone number</p>\r\n                        <div className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md flex\">\r\n                            <div className=\"text-center text-black font-normal text-md mr-4\">{selectedcity == null ? 0 : selectedcity[\"country\"][\"isd\"]}</div>\r\n                            <input onChange={handelcontent} value={contactnumber} type={\"text\"} maxLength={10} className=\"w-full outline-none bg-transparent focus:border-gray-300 rounded-md resize-none\" />\r\n                        </div>\r\n                        <div className=\"flex gap-2 mt-4 items-center\">\r\n                            <div>\r\n                                <input checked={check}\r\n                                    onChange={handleOnChange} type={\"checkbox\"} name=\"check2\" />\r\n                            </div>\r\n                            <p className=\"text-left text-[10px] text-black font-normal\">The above details are true and correct</p>\r\n                        </div>\r\n                        {(error == \"\" || error == null || error == undefined) ? null :\r\n                            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                        }\r\n                        <div className=\"w-full\" onClick={async () => {\r\n                            if (selCountry.length == 0) {\r\n                                setError(\"Select the country\");\r\n                            }\r\n                            else if (gender.length == 0) {\r\n                                setError(\"Select your gender\");\r\n                            }\r\n                            else if (selectedcity == null || selCountry == undefined) {\r\n                                setError(\"Select the city\")\r\n                            }\r\n                            else if (contactnumber == null || contactnumber == undefined || contactnumber == 0) {\r\n                                setError(\"Fill the contact number\");\r\n                            }\r\n                            else if (contactnumber.toString().length != 10) {\r\n                                setError(\"Enter a 10 degit valid contact number\");\r\n                            } else if (!check) {\r\n                                setError(\"Check the box in order to procide\");\r\n                            } else {\r\n                                let req = {\r\n                                    \"id\": userId,\r\n                                    \"cityId\": selectedcity[\"id\"],\r\n                                    \"userContact\": contactnumber,\r\n                                    \"userGender\": (selGender[0] == \"MALE\")\r\n                                        ? \"1\"\r\n                                        : (selGender[0] == \"FEMALE\")\r\n                                            ? \"2\"\r\n                                            : \"3\"\r\n                                };\r\n\r\n                                const data = await axios({\r\n                                    method: 'post',\r\n                                    url: `${BaseUrl}/api/updateuser`,\r\n                                    data: req,\r\n                                    headers: {\r\n                                        'Access-Control-Allow-Origin': '*',\r\n                                        'Access-Control-Allow-Headers': '*',\r\n                                        'Access-Control-Allow-Options': '*',\r\n                                        'Access-Control-Allow-Methods': '*',\r\n                                        'X-Content-Type-Options': '*',\r\n                                        'Content-Type': 'application/json',\r\n                                        'Accept': '*'\r\n                                    }\r\n                                });\r\n                                if (data.data.status == false) {\r\n                                    return setError(data.data.message);\r\n                                }\r\n                                setIndex(4);\r\n                                nextButton.current!.click();\r\n\r\n                            }\r\n                        }}>\r\n                            <CusButton text=\"Next\" textColor={\"text-white\"} width={'w-full'} background={\"bg-primary\"} fontwidth={\"font-bold\"}></CusButton>\r\n                        </div>\r\n                        <Form method=\"post\" className=\"hidden\">\r\n                            <input type=\"hidden\" name=\"id\" value={userId.toString()} />\r\n                            <input type=\"hidden\" name=\"address\" value={isBrand ? \"/home/profilecomplete/fifthpage\" : \"/home\"} />\r\n                            <button ref={nextButton} name=\"submit\">Submit</button>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default ForthPage;\r\n\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n    const formData = await request.formData();\r\n    const value = Object.fromEntries(formData);\r\n\r\n    const userdata = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/getuser`,\r\n        data: { \"id\": value.id },\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n    if (userdata.data.status == false) {\r\n        return { message: userdata.data.message };\r\n    } else {\r\n        return redirect(value.address.toString(), {\r\n            headers: {\r\n                \"Set-Cookie\": await userPrefs.serialize({ user: userdata.data.data[0], isLogin: true }),\r\n            },\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAAA,gBAAiC;AA6ED;AAhDhC,IAAM,YAAY,MAAM;AAEpB,QAAM,WAAW,cAAc;AAC/B,QAAM,SAAiB,SAAS,KAAK;AACrC,QAAM,UAAU,SAAS;AACzB,QAAM,SAAmB,CAAC,QAAQ,UAAU,aAAa;AACzD,QAAM,UAAU,SAAS,KAAK,KAAK,WAAW,OAAO,OAAO;AAE5D,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAgB,CAAC,CAAC;AACtD,QAAM,CAAC,KAAK,MAAM,QAAI,wBAAkB,KAAK;AAE7C,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAgB,CAAC,CAAC;AACpD,QAAM,CAAC,KAAK,MAAM,QAAI,wBAAkB,KAAK;AAG7C,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAiB,EAAE;AAC7C,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAwB,IAAI;AAC9D,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAkB,KAAK;AACrD,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAgB,CAAC,CAAC;AACtD,QAAM,CAAC,cAAc,eAAe,QAAI,wBAAc,IAAI;AAG1D,QAAM,CAAC,eAAe,gBAAgB,QAAI,wBAAiB;AAC3D,QAAM,gBAAgB,CAAC,MAAW;AAC9B,qBAAiB,EAAE,OAAO,MAAM,QAAQ,OAAO,EAAE,CAAC;AAAA,EACtD;AAEA,MAAI,cAAU,sBAAgC,IAAI;AAClD,QAAM,UAAU,OAAO,SAAiB;AACpC,UAAM,OAAO,MAAM,cAAM,KAAK,GAAG,wBAAwB,EAAE,UAAU,KAAK,CAAC;AAC3E,kBAAc,KAAK,KAAK,IAAI;AAAA,EAChC;AAEA,QAAM,WAAW,mBAAe,CAAC,UAAU,MAAM,QAAQ;AACzD,QAAM,WAAW,YAAY;AAC7B,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAkB,KAAK;AACjD,QAAM,iBAAiB,MAAM;AACzB,aAAS,CAAC,KAAK;AAAA,EACnB;AACA,QAAM,iBAAa,sBAA0B,IAAI;AAEjD,SACI,sFACI;AAAA,uDAAC,SAAI,WAAW,iFAAiF,UAAU,SAAS,YAChH,6DAAC,SAAI,WAAU,0CAEP,qBAAW,UAAU,IACjB,mDAAC,SAAI,WAAU,YACX;AAAA,yDAAC,SAAI,WAAU,yHAAwH,4CAAvI;AAAA;AAAA;AAAA;AAAA,aAAmK;AAAA,MACnK,mDAAC,YAAO,WAAU,sIAAqI,SAAS,MAAM;AAClK,mBAAW,KAAK;AAAA,MACpB,GAAG,qBAFH;AAAA;AAAA;AAAA;AAAA,aAEQ;AAAA,SAJZ;AAAA;AAAA;AAAA;AAAA,WAKA,IAEA,mDAAC,SAAI,WAAU,uCAEP,qBAAW,IAAI,CAAC,OAAY,UAAkB;AAC1C,aACI,sFACI,6DAAC,SAAI,SAAS,MAAM;AAChB,wBAAgB,KAAK;AACrB,mBAAW,KAAK;AAChB,gBAAS,QAAS,QAAQ;AAAA,MAC9B,GAAe,WAAU,kHAAkH;AAAA,cAAM;AAAA,QAAQ;AAAA,QAAI,MAAM;AAAA,WAA3J,OAJR;AAAA;AAAA;AAAA;AAAA,aAI2K,KAL/K;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,IAER,CAAC,KAZT;AAAA;AAAA;AAAA;AAAA,WAcA,KAxBZ;AAAA;AAAA;AAAA;AAAA,WA0BA,KA3BJ;AAAA;AAAA;AAAA;AAAA,WA4BA;AAAA,IACA,mDAAC,SAAI,WAAU,cACX,6DAAC,SAAI,WAAU,eACX,6DAAC,SAAI,WAAU,UAEX;AAAA,yDAAC,OAAE,WAAU,iDAAgD,uBAA7D;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC,SAAI,WAAU,wDACX;AAAA,2DAAC,SAAI,WAAU,2DACV,qBAAW,IAAI,CAAC,OAAY,MAAc;AACvC,iBACI,mDAAC,SAAY,WAAU,gEACnB,6DAAC,QAAG,WAAU,8CACT,aAAG,MAAM,cAAc,MAAM,cADlC;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHM,GAAV;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,QAER,CAAC,KATL;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QACA,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,SAAI,WAAU,uDAAsD,SAAS,MAAM;AAChF,iBAAO,IAAI;AAAA,QACf,GACI,6DAAC,mBAAgB,MAAM,SAAvB;AAAA;AAAA;AAAA;AAAA,eAA8B,KAHlC;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,WAjBJ;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,MACA,mDAAC,SAAI,WAAW,gEAAgE,MAAM,KAAK,oCACvF,6DAAC,SAAI,WAAU,gCACX;AAAA,2DAAC,SAAI,WAAU,gDACV,kBAAQ,IAAI,CAAC,KAAU,MAAc;AAClC,iBACI,mDAAC,QAAG,SAAS,MAAM;AACf,gBAAI,WAAW,SAAS,GAAG,GAAG;AAC1B,kBAAI,SAAS,WAAW,OAAO,CAAC,SAAS,QAAQ,GAAG;AACpD,4BAAc,MAAM;AAAA,YACxB,OAAO;AACH,4BAAc,CAAC,GAAG,CAAC;AAAA,YACvB;AAAA,UACJ,GAAW,WAAW,mEAAmE,WAAW,SAAS,GAAG,IAAI,oCAAoC,8CAA+C;AAAA,gBAAI;AAAA,YAAQ;AAAA,YAAI,IAAI;AAAA,eAAnN,GAPR;AAAA;AAAA;AAAA;AAAA,iBAOmO;AAAA,QAE3O,CAAC,KAZL;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,QACA,mDAAC,SAAI,SAAS,MAAM;AAChB,iBAAO,KAAK;AAAA,QAChB,GAAG,WAAU,mGAAkG,qBAF/G;AAAA;AAAA;AAAA;AAAA,eAEoH;AAAA,WAjBxH;AAAA;AAAA;AAAA;AAAA,aAkBA,KAnBJ;AAAA;AAAA;AAAA;AAAA,aAoBA;AAAA,MAIA,mDAAC,OAAE,WAAU,kDAAiD,sBAA9D;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC,SAAI,WAAU,wDACX;AAAA,2DAAC,SAAI,WAAU,2DACV,oBAAU,IAAI,CAAC,OAAY,MAAc;AACtC,iBACI,mDAAC,SAAY,WAAU,gEACnB,6DAAC,QAAG,WAAU,8CACT,mBADL;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHM,GAAV;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,QAER,CAAC,KATL;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QACA,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,SAAI,WAAU,uDAAsD,SAAS,MAAM;AAChF,iBAAO,IAAI;AAAA,QACf,GACI,6DAAC,mBAAgB,MAAM,SAAvB;AAAA;AAAA;AAAA;AAAA,eAA8B,KAHlC;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,WAjBJ;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,MACA,mDAAC,SAAI,WAAW,gEAAgE,MAAM,KAAK,oCACvF,6DAAC,SAAI,WAAU,gCACX;AAAA,2DAAC,SAAI,WAAU,gDACV,iBAAO,IAAI,CAAC,KAAU,MAAc;AACjC,iBACI,mDAAC,QAAG,SAAS,MAAM;AACf,gBAAI,UAAU,SAAS,GAAG,GAAG;AACzB,kBAAI,SAAS,UAAU,OAAO,CAAC,SAAS,QAAQ,GAAG;AACnD,2BAAa,MAAM;AAAA,YACvB,OAAO;AACH,2BAAa,CAAC,GAAG,CAAC;AAAA,YACtB;AAAA,UACJ,GAAW,WAAW,mEAAmE,UAAU,SAAS,GAAG,IAAI,oCAAoC,8CAA+C,iBAA9L,GAPR;AAAA;AAAA;AAAA;AAAA,iBAO0M;AAAA,QAElN,CAAC,KAZL;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,QACA,mDAAC,SAAI,SAAS,MAAM;AAChB,iBAAO,KAAK;AAAA,QAChB,GAAG,WAAU,mGAAkG,qBAF/G;AAAA;AAAA;AAAA;AAAA,eAEoH;AAAA,WAjBxH;AAAA;AAAA;AAAA;AAAA,aAkBA,KAnBJ;AAAA;AAAA;AAAA;AAAA,aAoBA;AAAA,MAGA,mDAAC,OAAE,WAAU,kDAAiD,oBAA9D;AAAA;AAAA;AAAA;AAAA,aAAkE;AAAA,MAClE,mDAAC,SAAI,WAAU,2CACX;AAAA,2DAAC,SAAI,WAAU,QACX,6DAAC,WAAM,KAAK,SAAS,WAAU,qEAA/B;AAAA;AAAA;AAAA;AAAA,eAAiG,KADrG;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,SAAI,WAAU,oFAAmF,SAAS,MAAM;AA1M7I;AA2MgC,gBAAI,aAAQ,YAAR,mBAAiB,UAAS,UAAQ,aAAQ,YAAR,mBAAiB,UAAS,YAAa,aAAQ,YAAR,mBAAiB,UAAS,IAAI;AACvG,yBAAa,qBAAqB;AAAA,UACtC,OAAO;AACH,uBAAW,IAAI;AACf,yBAAa,IAAI;AACjB,qBAAQ,mBAAQ,YAAR,mBAAiB,UAAjB,YAA0B,EAAE;AAAA,UACxC;AAAA,QACJ,GACI,6DAAC,mBAAgB,MAAM,kBAAvB;AAAA;AAAA;AAAA;AAAA,eAAuC,KAT3C;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,WAdJ;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA,MACE,aAAa,MAAM,aAAa,QAAQ,aAAa,SAAa,OAChE,mDAAC,SAAI,WAAU,yHAAyH,uBAAxI;AAAA;AAAA;AAAA;AAAA,aAAkJ;AAAA,MAEpJ,gBAAgB,MAAM,gBAAgB,QAAQ,gBAAgB,SAAa,OACzE,mDAAC,SAAI,WAAU,mHAAmH;AAAA,qBAAa;AAAA,QAAQ;AAAA,QAAI,aAAa;AAAA,WAAxK;AAAA;AAAA;AAAA;AAAA,aAAgL;AAAA,MAEpL,mDAAC,OAAE,WAAU,kDAAiD,4BAA9D;AAAA;AAAA;AAAA;AAAA,aAA0E;AAAA,MAC1E,mDAAC,SAAI,WAAU,8EACX;AAAA,2DAAC,SAAI,WAAU,mDAAmD,0BAAgB,OAAO,IAAI,aAAa,WAAW,UAArH;AAAA;AAAA;AAAA;AAAA,eAA4H;AAAA,QAC5H,mDAAC,WAAM,UAAU,eAAe,OAAO,eAAe,MAAM,QAAQ,WAAW,IAAI,WAAU,qFAA7F;AAAA;AAAA;AAAA;AAAA,eAA+K;AAAA,WAFnL;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SAAI,WAAU,gCACX;AAAA,2DAAC,SACG;AAAA,UAAC;AAAA;AAAA,YAAM,SAAS;AAAA,YACZ,UAAU;AAAA,YAAgB,MAAM;AAAA,YAAY,MAAK;AAAA;AAAA,UADrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAC8D,KAFlE;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA,mDAAC,OAAE,WAAU,gDAA+C,sDAA5D;AAAA;AAAA;AAAA;AAAA,eAAkG;AAAA,WALtG;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACE,SAAS,MAAM,SAAS,QAAQ,SAAS,SAAa,OACpD,mDAAC,SAAI,WAAU,yHAAyH,mBAAxI;AAAA;AAAA;AAAA;AAAA,aAA8I;AAAA,MAElJ,mDAAC,SAAI,WAAU,UAAS,SAAS,YAAY;AACzC,YAAI,WAAW,UAAU,GAAG;AACxB,mBAAS,oBAAoB;AAAA,QACjC,WACS,OAAO,UAAU,GAAG;AACzB,mBAAS,oBAAoB;AAAA,QACjC,WACS,gBAAgB,QAAQ,cAAc,QAAW;AACtD,mBAAS,iBAAiB;AAAA,QAC9B,WACS,iBAAiB,QAAQ,iBAAiB,UAAa,iBAAiB,GAAG;AAChF,mBAAS,yBAAyB;AAAA,QACtC,WACS,cAAc,SAAS,EAAE,UAAU,IAAI;AAC5C,mBAAS,uCAAuC;AAAA,QACpD,WAAW,CAAC,OAAO;AACf,mBAAS,mCAAmC;AAAA,QAChD,OAAO;AACH,cAAI,MAAM;AAAA,YACN,MAAM;AAAA,YACN,UAAU,aAAa;AAAA,YACvB,eAAe;AAAA,YACf,cAAe,UAAU,MAAM,SACzB,MACC,UAAU,MAAM,WACb,MACA;AAAA,UACd;AAEA,gBAAM,OAAO,MAAM,cAAM;AAAA,YACrB,QAAQ;AAAA,YACR,KAAK,GAAG;AAAA,YACR,MAAM;AAAA,YACN,SAAS;AAAA,cACL,+BAA+B;AAAA,cAC/B,gCAAgC;AAAA,cAChC,gCAAgC;AAAA,cAChC,gCAAgC;AAAA,cAChC,0BAA0B;AAAA,cAC1B,gBAAgB;AAAA,cAChB,UAAU;AAAA,YACd;AAAA,UACJ,CAAC;AACD,cAAI,KAAK,KAAK,UAAU,OAAO;AAC3B,mBAAO,SAAS,KAAK,KAAK,OAAO;AAAA,UACrC;AACA,mBAAS,CAAC;AACV,qBAAW,QAAS,MAAM;AAAA,QAE9B;AAAA,MACJ,GACI,6DAAC,aAAU,MAAK,QAAO,WAAW,cAAc,OAAO,UAAU,YAAY,cAAc,WAAW,eAAtG;AAAA;AAAA;AAAA;AAAA,aAAmH,KAnDvH;AAAA;AAAA;AAAA;AAAA,aAoDA;AAAA,MACA,mDAAC,QAAK,QAAO,QAAO,WAAU,UAC1B;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,MAAK,OAAO,OAAO,SAAS,KAAtD;AAAA;AAAA;AAAA;AAAA,eAAyD;AAAA,QACzD,mDAAC,WAAM,MAAK,UAAS,MAAK,WAAU,OAAO,UAAU,oCAAoC,WAAzF;AAAA;AAAA;AAAA;AAAA,eAAkG;AAAA,QAClG,mDAAC,YAAO,KAAK,YAAY,MAAK,UAAS,sBAAvC;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA,WAHjD;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SAxLJ;AAAA;AAAA;AAAA;AAAA,WAyLA,KA1LJ;AAAA;AAAA;AAAA;AAAA,WA2LA,KA5LJ;AAAA;AAAA;AAAA;AAAA,WA6LA;AAAA,OA3NJ;AAAA;AAAA;AAAA;AAAA,SA4NA;AAER;AACA,IAAO,oBAAQ;",
  "names": ["import_react"]
}
