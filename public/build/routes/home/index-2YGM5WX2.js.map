{
  "version": 3,
  "sources": ["../../../../app/routes/home/index.tsx", "../../../../app/state/home/profilecompletestat.ts", "../../../../app/components/utils/topinfluencercard.tsx"],
  "sourcesContent": ["import { faHeart, faIdBadge, faStar, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, LoaderFunction, json, redirect } from \"@remix-run/node\";\r\nimport { Link, useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { BrandCard } from \"~/components/utils/brandcard\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { CampaginCard } from \"~/components/utils/campagincard\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport ProfileComleteStore from \"~/state/home/profilecompletestat\";\r\nimport { InfluencerSearch } from \"./findcampaign\";\r\nimport TopInfluencerCard from \"~/components/utils/topinfluencercard\";\r\nimport { getCampaignType } from \"~/utils\";\r\n\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n    const cookieHeader = props.request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n    const platformRes = await axios.post(`${BaseUrl}/api/getplatform`);\r\n    const categoryRes = await axios.post(`${BaseUrl}/api/getcategory`);\r\n    const countryRes = await axios.post(`${BaseUrl}/api/getcountry`);\r\n    return json({ user: cookie.user, platform: platformRes.data.data, category: categoryRes.data.data, country: countryRes.data.data });\r\n}\r\n\r\nconst HomePage = () => {\r\n    const user = useLoaderData();\r\n    const userdata = user.user;\r\n    const profilecomplted: String = userdata[\"profileCompleteness\"];\r\n    const isbrand = user.user.role.code != 10;\r\n    const isOpen = ProfileComleteStore((state) => state.isOpen);\r\n    const isOpenChange = ProfileComleteStore((state) => state.change);\r\n    const navigator = useNavigate();\r\n    const init = async () => {\r\n\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        isOpenChange(profilecomplted == \"1\" ? false : true);\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"flex mt-4\">\r\n                <div className=\"grow\"></div>\r\n                <div onClick={async () => {\r\n                    navigator(\"/logout\");\r\n                }}>\r\n                    <CusButton text=\"Logout\" background=\"bg-[#f43f5e]\" textColor={\"text-white\"}></CusButton>\r\n                </div>\r\n            </div> */}\r\n            {isOpen ? <ProfileComplete></ProfileComplete> : null}\r\n            <Intro></Intro>\r\n            {\r\n                isbrand ?\r\n                    <>\r\n                        {/* brand section */}\r\n                        <InfluencerSearch platform={user.platform} country={user.country} category={user.category}></InfluencerSearch>\r\n                        <TopInfluencer></TopInfluencer>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        {/* influencer section */}\r\n                        <EarnSection></EarnSection>\r\n                        <SponsoredPosts></SponsoredPosts>\r\n                        <NewCampaign></NewCampaign>\r\n                        <TopBrands></TopBrands>\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\nconst ProfileComplete = () => {\r\n    const changeState = ProfileComleteStore((state) => state.change)\r\n    return (\r\n        <>\r\n            <div className=\"w-full bg-secondary rounded-xl p-2 my-4 flex\">\r\n                <div className=\"flex grow flex-col md:flex-row\">\r\n                    <div className=\"grow grid place-items-center\">\r\n                        <div className=\"py-10 md:w-[400px]\">\r\n                            <h1 className=\"text-2xl text-white font-bold\">Please Complete Your Profile</h1>\r\n                            <h1 className=\"text-md text-white font-normal\">Your linked social media accounts are under verification. You'll be notified within 24 hours.</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"xl:w-96 grid place-items-center\">\r\n                        <Link to=\"/home/profilecomplete\" >\r\n                            <CusButton text=\"Click here to complete\" textColor={\"text-white\"} background={\"bg-primary\"}></CusButton>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div onClick={() => { changeState(false) }}> <FontAwesomeIcon className=\"text-white text-2xl font-bold\" icon={faXmark}></FontAwesomeIcon> </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Intro = () => {\r\n    const navigator = useNavigate();\r\n    let data = [\r\n        { \"image\": \"74.jfif\", \"id\": \"74\" },\r\n        { \"image\": \"75.jfif\", \"id\": \"75\" },\r\n        { \"image\": \"76.jfif\", \"id\": \"76\" },\r\n        { \"image\": \"77.jfif\", \"id\": \"77\" },\r\n        { \"image\": \"78.jfif\", \"id\": \"78\" },\r\n        { \"image\": \"79.jfif\", \"id\": \"79\" },\r\n        { \"image\": \"80.jfif\", \"id\": \"80\" },\r\n        { \"image\": \"81.jfif\", \"id\": \"81\" },\r\n        { \"image\": \"82.jfif\", \"id\": \"82\" },\r\n        { \"image\": \"83.jfif\", \"id\": \"83\" },\r\n        { \"image\": \"84.jfif\", \"id\": \"84\" },\r\n        { \"image\": \"85.jfif\", \"id\": \"85\" },\r\n        { \"image\": \"86.jfif\", \"id\": \"86\" },\r\n        { \"image\": \"87.jfif\", \"id\": \"87\" },\r\n        { \"image\": \"88.jfif\", \"id\": \"88\" },\r\n    ];\r\n    return (\r\n        <>\r\n            <div className=\"grid place-items-center w-full mt-10\">\r\n                <h1 className=\"text-4xl text-primary font-bold text-center\">Welcome to SWRV</h1>\r\n                <h1 className=\"text-xl text-primary font-normal text-center\">Reach the next billion</h1>\r\n            </div>\r\n            <div className=\"flex gap-4 items-center mb-6 overflow-x-scroll no-scrollbar\">\r\n                {data.map((val: any, index: number) => {\r\n                    return (\r\n                        <div key={index} className=\"block shrink-0 cursor-pointer\" onClick={() => {\r\n                            navigator(`/home/user/${val.id}`);\r\n                        }}>\r\n                            <img src={`/images/inf/${val.image}`} alt=\"error\" className=\"rounded-md w-40 h-40\" />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst EarnSection = () => {\r\n    return (\r\n        <>\r\n            <div className=\"w-full rounded-xl flex flex-col md:flex-row bg-yellow-500 mt-12\">\r\n                <div className=\"grow grid place-items-center\">\r\n                    <img src=\"/images/cashgirl.png\" alt=\"error\" className=\"md:h-80\" />\r\n                </div>\r\n                <div className=\"p-4 md:p-12 bg-[#F7941D] rounded-r-xl grid place-items-center\">\r\n                    <div>\r\n                        <h1 className=\"text-2xl text-black font-bold text-left\">To earn more money?</h1>\r\n                        <h1 className=\"text-md text-black font-normal text-left md:w-80\">Search, apply for brands campaigns and create more great content.</h1>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst SponsoredPosts = () => {\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-2xl my-3 shadow-xl p-4\">\r\n                <div className=\"w-60 shadow-xl   rounded-xl text-xl font-bold text-black p-2 my-4\"> <FontAwesomeIcon icon={faHeart} className=\"text-md text-secondary\"></FontAwesomeIcon> Sponsored Posts </div>\r\n                <div className=\"grid place-items-center md:place-items-start grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                    <CampaginCard id=\"55\" weburl=\"www.adidas.com\" platforms={[\"/images/media/instagram.png\", \"/images/media/youtube.png\"]} maxval=\"1500\" category=\"Consumer Electronics\" image=\"/images/brand/adidas.jpg\" name=\"Adidas\" currency=\"USD\"></CampaginCard>\r\n                    <CampaginCard id=\"55\" weburl=\"www.adidas.com\" platforms={[\"/images/media/instagram.png\", \"/images/media/youtube.png\"]} maxval=\"2000\" category=\"Consumer Electronics\" image=\"/images/brand/furinicom.jpg\" name=\"Furinicom\" currency=\"USD\"></CampaginCard>\r\n                    <CampaginCard id=\"55\" weburl=\"www.adidas.com\" platforms={[\"/images/media/instagram.png\", \"/images/media/youtube.png\"]} maxval=\"3000\" category=\"Consumer Electronics\" image=\"/images/brand/hilton.jpg\" name=\"Hilton\" currency=\"USD\"></CampaginCard>\r\n                    <CampaginCard id=\"55\" weburl=\"www.adidas.com\" platforms={[\"/images/media/instagram.png\", \"/images/media/youtube.png\"]} maxval=\"2500\" category=\"Consumer Electronics\" image=\"/images/brand/lucent.jpg\" name=\"Lucent\" currency=\"USD\"></CampaginCard>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst NewCampaign = () => {\r\n    const [topChampaing, setTopChampaing] = useState<any[]>([]);\r\n    const [campaignCards, setCampaignCards] = useState<React.ReactNode[]>([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const apidata = await axios({\r\n                method: 'post',\r\n                url: `${BaseUrl}/api/get-top-campaigns`,\r\n            });\r\n            setTopChampaing(apidata.data.data.campaigns);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const createCampaignCards = async () => {\r\n            const cards = await Promise.all(topChampaing.map(async (val: any, index: number) => {\r\n                let platforms: string[] = [];\r\n                for (let i: number = 0; i < val[\"platforms\"].length; i++) {\r\n                    platforms.push(val[\"platforms\"][i][\"platformLogoUrl\"]);\r\n                }\r\n                let campaignType = await getCampaignType(val[\"campaignTypeId\"]);\r\n                let image = val[\"brand\"].length == 0 || val[\"brand\"] == undefined || val[\"brand\"] == null || val[\"brand\"] == \"\" ? \"/images/avatar/user.png\" : val[\"brand\"][\"logo\"] == \"0\" || val[\"brand\"][\"logo\"] == undefined || val[\"brand\"][\"logo\"] == null || val[\"brand\"][\"logo\"] == \"\" ? \"/images/avatar/user.png\" : val[\"brand\"][\"logo\"];\r\n                return (\r\n                    <div key={index}>\r\n                        <CampaginCard id={val.id} weburl=\"www.adidas.com\" platforms={platforms} maxval={val.costPerPost.split(\".\")[0]} category={campaignType} image={image} name={val.name} currency={val[\"currency\"][\"code\"]}></CampaginCard>\r\n                    </div>\r\n                );\r\n            }));\r\n            setCampaignCards(cards);\r\n        };\r\n        createCampaignCards();\r\n    }, [topChampaing]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-2xl my-3 shadow-xl p-4\">\r\n                <div className=\"w-60 shadow-xl rounded-xl text-xl font-bold text-black p-2 my-4\"> <FontAwesomeIcon icon={faIdBadge} className=\"text-md text-secondary\"></FontAwesomeIcon> New Campaign </div>\r\n                <div className=\"grid grid-cols-1  place-items-center lgna khar:place-items-start  md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                    {campaignCards}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TopBrands = () => {\r\n    const [topBrands, setTopBarnds] = useState<any[]>([]);\r\n    const init = async () => {\r\n        const apidata = await axios({\r\n            method: 'post',\r\n            url: `${BaseUrl}/api/get-top-brands`,\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Headers': '*',\r\n                'Access-Control-Allow-Options': '*',\r\n                'Access-Control-Allow-Methods': '*',\r\n                'X-Content-Type-Options': '*',\r\n                'Content-Type': 'application/json',\r\n                'Accept': '*'\r\n            }\r\n        });\r\n        setTopBarnds(apidata.data.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-2xl my-3 shadow-xl p-4\">\r\n                <div className=\"w-60 shadow-xl rounded-xl text-xl font-bold text-black p-2 my-4\"> <FontAwesomeIcon icon={faStar} className=\"text-md text-secondary\"></FontAwesomeIcon> Top brands </div>\r\n                <div className=\"grid grid-cols-1 place-items-center lg:place-items-start md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                    {\r\n                        topBrands.map((val: any, index: number) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <BrandCard id={val.id} email={val.email} image={val.logo} name={val.name} website={val.webUrl}></BrandCard>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TopInfluencer = () => {\r\n    const [topInfluencer, setTopInfluencer] = useState<any[]>([]);\r\n    const init = async () => {\r\n        const apidata = await axios({\r\n            method: 'post',\r\n            url: `${BaseUrl}/api/user-search`,\r\n            data: { \"role\": 10 },\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Headers': '*',\r\n                'Access-Control-Allow-Options': '*',\r\n                'Access-Control-Allow-Methods': '*',\r\n                'X-Content-Type-Options': '*',\r\n                'Content-Type': 'application/json',\r\n                'Accept': '*'\r\n            }\r\n        });\r\n        for (let i: number = 0; i < 5; i++) {\r\n            setTopInfluencer((prevdata) => [...prevdata, apidata.data.data[i]]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-2xl my-3 shadow-xl p-4\">\r\n                <div className=\"w-60 shadow-xl   rounded-xl text-xl font-bold text-black p-2 my-4\"> <FontAwesomeIcon icon={faHeart} className=\"text-md text-secondary\"></FontAwesomeIcon> Top influencer </div>\r\n                <div className=\"grid gap-4 grid-col-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 mt-4 place-items-center \">\r\n                    {\r\n                        topInfluencer.map((val: any, index: number) => {\r\n                            const avatar = val[\"pic\"] == \"0\" || val[\"pic\"] == null || val[\"pic\"] == undefined || val[\"pic\"] == \"\" ? \"/images/avatar/user.png\" : val[\"pic\"];\r\n                            return (\r\n                                <div key={index}>\r\n                                    <TopInfluencerCard star={parseInt(val.rating)} image={avatar} name={val.userName} currency={val.currency.code} dob={val.dob}></TopInfluencerCard>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </div >\r\n        </>\r\n    );\r\n}", "import { create } from \"zustand\";\r\n\r\ninterface ProfileCompleteState {\r\n    isOpen: boolean\r\n    change: (value: boolean) => void\r\n}\r\n\r\n\r\nconst ProfileComleteStore = create<ProfileCompleteState>()((set) => ({\r\n    isOpen: true,\r\n    change: (value) => set((state) => ({ isOpen: value })),\r\n}));\r\n\r\nexport default ProfileComleteStore;\r\n\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { CusButton } from \"./buttont\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\ntype TopInfluencerCardProps = {\r\n    image: string\r\n    name: string\r\n    star: number\r\n    dob: string\r\n    currency: string\r\n}\r\nconst TopInfluencerCard = (props: TopInfluencerCardProps) => {\r\n    const Star = () => {\r\n        const fullStars = Math.floor(props.star);\r\n        const fractionalStar = props.star - fullStars;\r\n        const stars = [];\r\n\r\n        for (let i = 0; i < fullStars; i++) {\r\n            stars.push(\r\n                <FontAwesomeIcon key={i} className=\"text-xs text-pink-500\" icon={faStar} />\r\n            );\r\n        }\r\n\r\n        if (fractionalStar > 0) {\r\n            stars.push(\r\n                <FontAwesomeIcon\r\n                    key={fullStars}\r\n                    className=\"text-xs text-pink-500\"\r\n                    icon={faStar}\r\n                    style={{ width: `${fractionalStar * 100}%` }}\r\n                />\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < 5 - fullStars; i++) {\r\n            stars.push(\r\n                <FontAwesomeIcon\r\n                    key={5 + i}\r\n                    className=\"text-xs text-gray-300\"\r\n                    icon={faStar}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <>{stars}</>;\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-xl shadow-xl w-64 my-2\">\r\n                <img src={props.image} alt=\"error\" className=\"w-full h-40 object-cover rounded-t-md\" />\r\n                {/* <div className=\"flex gap-1 -translate-y-5 pl-4\">\r\n                    <div className=\"border p-1 bg-white border-blue-500 rounded-full\">\r\n                        <img src=\"/images/media/instagram.png\" alt=\"error\" className=\"w-6 h-6 rounded-full\" />\r\n                    </div>\r\n                    <div className=\"border p-1 border-blue-500 bg-white rounded-full\">\r\n                        <img src=\"/images/media/youtube.png\" alt=\"error\" className=\"w-6 h-6 rounded-full\" />\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"px-4 pb-2\">\r\n                    <div className=\"flex items-start my-2 justify-between\">\r\n                        <div className=\"grow\">\r\n                            <p className=\"text-black font-semibold text-sm text-left\">{props.name.split(\"@\")[0]}</p>\r\n                            <div className=\"flex\">\r\n                                <Star></Star>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"text-black font-bold  text-md text-right\">3500 {props.currency}<br /> {props.dob}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-4\">\r\n                        <div className=\"bg-gray-200  rounded-md py-2 flex justify-around\">\r\n                            <div>\r\n                                <p className=\"text-center text-sm font-semibold\">2 00 5887</p>\r\n                                <p className=\"text-center text-xs font-normal\">Reach</p>\r\n                            </div>\r\n                            <div className=\"h-10 w-[1px] bg-slate-900\"></div>\r\n                            <div>\r\n                                <p className=\"text-center text-sm font-semibold\">1 34 9887</p>\r\n                                <p className=\"text-center text-xs font-normal\">Impression</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bg-gray-200 text-center text-sm font-semibold rounded-md py-2 mt-2\">\r\n                            <p>SWRV score :  <span className=\"font-normal\">2005887</span></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TopInfluencerCard;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
