{
  "version": 3,
  "sources": ["../../../../app/routes/home/mycampaings.tsx"],
  "sourcesContent": ["import { faIdBadge } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { CampaginCard } from \"~/components/utils/campagincard\";\r\nimport PastBrandCard from \"~/components/utils/pastbrandcard\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n    const cookieHeader = request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n    const userid = cookie.user.id;\r\n    const campdata = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/get-my-campaigns`,\r\n        data: { \"id\": userid },\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n\r\n    let req = {\r\n        \"search\": {\r\n            \"status\": \"3\",\r\n            \"influencer\": userid,\r\n            \"fromUser\": userid\r\n        }\r\n    };\r\n    const usercamp = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/search-invite`,\r\n        data: req,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n    return json({ userdata: cookie.user, camp: campdata.data.data, usercamp: usercamp.data.data });\r\n}\r\n\r\nconst MyCampaigns = () => {\r\n    const [completed, setCompleted] = useState(false);\r\n    const userdata = useLoaderData();\r\n    const isBrand = userdata.userdata.role[\"code\"] == \"50\" ? true : false;\r\n    const campdata = userdata.camp.campaigns;\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"flex my-6 md:flex-row flex-col\">\r\n                    <div>\r\n                        <h1 className=\"text-2xl font-bold text-black text-left mt-4\">My campaigns</h1>\r\n                        <p className=\"text-md font-normal text-black text-left\">Here you can manage all the campaigns that you are participating in.</p>\r\n                    </div>\r\n                    <div className=\"hidden md:block md:grow\"></div>\r\n                    {/* <div className=\"flex justify-center\">\r\n                        <div onClick={() => { setCompleted(false) }}>\r\n                            <CusButton height=\"h-12\" text=\"Active campaigns\" fontwidth=\"font-bold\" background={`${completed ? \"bg-gray-300\" : \"bg-[#7CFF01]\"}`} textColor={`text-black}`}></CusButton>\r\n                        </div>\r\n                        <div className=\"w-8\"></div>\r\n                        <div onClick={() => { setCompleted(true) }}>\r\n                            <CusButton height=\"h-12\" text=\"Finished campaigns\" fontwidth=\"font-bold\" background={`${completed ? \"bg-[#7CFF01]\" : \"bg-gray-300\"}`} textColor=\"text-black\"></CusButton>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n                {\r\n                    isBrand ?\r\n                        <div className=\"bg-white shadow-xl rounded-xl p-6\">\r\n                            <h1 className=\"text-black text-center font-bold text-2xl\">Would you like to collaborate ?</h1>\r\n                            <div className=\"w-full text-center bg-red\">\r\n                                <Link to={\"/home/createcampaign\"} >\r\n                                    <CusButton text=\"Create Campaign\" textColor={\"text-white\"} background=\"bg-secondary\"></CusButton>\r\n                                </Link>\r\n                            </div>\r\n                        </div> : null\r\n                }\r\n                {\r\n                    isBrand ?\r\n                        <div>\r\n                            {completed\r\n                                ?\r\n                                <CompletedCampaigns></CompletedCampaigns>\r\n                                :\r\n                                <ActiveCampaign camp={campdata}></ActiveCampaign>\r\n                            }\r\n                        </div>\r\n                        : <UserDrafts userid={userdata.userdata.id}></UserDrafts>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCampaigns;\r\n\r\ntype ActiveCampaignProps = {\r\n    camp: object[]\r\n}\r\n\r\n\r\nconst ActiveCampaign = (props: ActiveCampaignProps) => {\r\n    const campdata = props.camp;\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-2xl my-3 shadow-xl p-4\">\r\n                <div className=\"w-60 shadow-xl rounded-xl text-xl font-bold text-black p-2 my-4\"> <FontAwesomeIcon icon={faIdBadge} className=\"text-md text-secondary\"></FontAwesomeIcon> New Campaign </div>\r\n                {\r\n                    campdata.length == 0 ? <h1 className=\"text-black font-medium text-xl text-center\">Here is no campaign created..</h1> : null\r\n                }\r\n                <div className=\"grid grid-cols-1  place-items-center md:place-items-start  md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                    {\r\n                        campdata.map((val: any, i: number) => {\r\n                            const platforms: string[] = [];\r\n                            for (let i: number = 0; i < val.platforms.length; i++) {\r\n                                platforms.push(val.platforms[i]['platformLogoUrl']);\r\n                            }\r\n                            let image = val[\"brand\"].length == 0 || val[\"brand\"] == undefined || val[\"brand\"] == null || val[\"brand\"] == \"\" ? \"/images/avatar/user.png\" : val[\"brand\"][\"logo\"] == \"0\" || val[\"brand\"][\"logo\"] == undefined || val[\"brand\"][\"logo\"] == null || val[\"brand\"][\"logo\"] == \"\" ? \"/images/avatar/user.png\" : val[\"brand\"][\"logo\"];\r\n                            return (\r\n                                <div key={i}>\r\n                                    <CampaginCard id={val.id} currency={val.currency.code} platforms={platforms} maxval={val.costPerPost.split(\".\")[0]} weburl=\"agag\" category={val.type.name} image={image} name={val.name}></CampaginCard>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst CompletedCampaigns = () => {\r\n    return (\r\n        <>\r\n            <div className=\"grid gap-4 grid-col-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 p-3 place-items-center\">\r\n                <PastBrandCard></PastBrandCard>\r\n                <PastBrandCard></PastBrandCard>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\ntype UserDraftsProps = {\r\n    userid: string\r\n}\r\n\r\nconst UserDrafts = (props: UserDraftsProps) => {\r\n    const [userDraft, setUserDraft] = useState<any[]>([]);\r\n    const init = async () => {\r\n\r\n        let req = {\r\n            \"search\": {\r\n                \"status\": \"3\",\r\n                \"influencer\": props.userid,\r\n                \"fromUser\": props.userid\r\n            }\r\n        };\r\n        const apidata = await axios({\r\n            method: 'post',\r\n            url: `${BaseUrl}/api/search-invite`,\r\n            data: req,\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Headers': '*',\r\n                'Access-Control-Allow-Options': '*',\r\n                'Access-Control-Allow-Methods': '*',\r\n                'X-Content-Type-Options': '*',\r\n                'Content-Type': 'application/json',\r\n                'Accept': '*'\r\n            }\r\n        });\r\n        setUserDraft(apidata.data.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"bg-white rounded-2xl my-3 shadow-xl p-4\">\r\n            <div className=\"w-60 shadow-xl rounded-xl text-xl font-bold text-black p-2 my-4\"> <FontAwesomeIcon icon={faIdBadge} className=\"text-md text-secondary\"></FontAwesomeIcon> New Campaign </div>\r\n            {\r\n                userDraft.length == 0 ? <h1 className=\"text-black font-medium text-xl text-center\">You haven't collaborated in any champaing.</h1> : null\r\n            }\r\n            <div className=\"grid grid-cols-1  place-items-center md:place-items-start  md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n                {\r\n                    userDraft.map((val: any, i: number) => {\r\n                        let image = val[\"brand\"].length == 0 || val[\"brand\"] == undefined || val[\"brand\"] == null || val[\"brand\"] == \"\" ? \"/images/avatar/user.png\" : val[\"brand\"][\"logo\"] == \"0\" || val[\"brand\"][\"logo\"] == undefined || val[\"brand\"][\"logo\"] == null || val[\"brand\"][\"logo\"] == \"\" ? \"/images/avatar/user.png\" : val[\"brand\"][\"logo\"];\r\n                        return (\r\n                            <div key={i}>\r\n                                <div className=\"bg-white rounded-xl shadow-xl p-4 w-64 my-2\">\r\n                                    <div className=\"flex items-end gap-x-3\">\r\n                                        <div>\r\n                                            <img src={image} alt=\"error\" className=\"object-cover w-16 h-16 rounded\" />\r\n                                        </div>\r\n                                        <p className=\"text-black font-semibold text-xl content-end text-left\">{val.brand.name}</p>\r\n                                    </div>\r\n                                    <p className=\"text-black font-semibold text-xs text-left mt-2\">email : {val.brand.email}</p>\r\n                                    <Link to={`/home/campaigns/${val.campaign.id}`}>\r\n                                        <CusButton text=\"View\" textColor={\"text-black\"} background={\"bg-[#01FFF4]\"} width={\"w-full\"} margin={\"my-2\"} fontwidth={\"font-bold\"}></CusButton>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}"],
  "mappings": "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",
  "names": ["import_react", "i"]
}
