{
  "version": 3,
  "sources": ["../../../app/routes/createbrand.tsx"],
  "sourcesContent": ["import { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport { NavLink, useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport { UploadFile } from \"~/utils\";\r\nimport * as EmailValidator from 'email-validator';\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n    const cookieHeader = props.request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n    return json({ user: cookie.user });\r\n}\r\n\r\nconst createBarnd = () => {\r\n    const navigator = useNavigate();\r\n\r\n    const userdata = useLoaderData();\r\n    const userId: string = userdata.user.id\r\n    const [error, setError] = useState<String>(\"\");\r\n    const [img, setImale] = useState<File | null>(null);\r\n    let imgref = useRef<HTMLInputElement | null>(null);\r\n    const [imgerror, setImgerror] = useState<string | null>(null);\r\n    const [cityerror, setCityerror] = useState<string | null>(null);\r\n    const [citybox, setCitybox] = useState<boolean>(false);\r\n    const [searchcity, setSearchcity] = useState<any[]>([]);\r\n    const [selectedcity, setSelectedctiy] = useState<any>(null);\r\n\r\n\r\n    const [contactnumber, setContactnumber] = useState<number>()\r\n    const handelcontent = (e: any) => {\r\n        setContactnumber(e.target.value.replace(/\\D/g, ''));\r\n    }\r\n\r\n    let cityref = useRef<HTMLInputElement | null>(null);\r\n    const getCity = async (city: String) => {\r\n        const data = await axios.post(`${BaseUrl}/api/get-city`, { \"search\": city });\r\n        setSearchcity(data.data.data);\r\n    }\r\n\r\n    const nameRef = useRef<HTMLInputElement | null>(null);\r\n    const codeRef = useRef<HTMLInputElement | null>(null);\r\n    const addressRef = useRef<HTMLInputElement | null>(null);\r\n    const websiteRef = useRef<HTMLInputElement | null>(null);\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    const binfoRef = useRef<HTMLTextAreaElement | null>(null);\r\n    const cinfoRef = useRef<HTMLTextAreaElement | null>(null);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`w-full h-screen bg-black bg-opacity-25 fixed top-0 left-0  place-items-center ${citybox ? \"grid\" : \"hidden\"}`}>\r\n                <div className=\"bg-white shadow-md w-80 rounded-lg p-4\">\r\n                    {\r\n                        searchcity.length == 0 ?\r\n                            <div className=\"w-80 h-96\">\r\n                                <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">No city found with this name</div>\r\n                                <button className=\"px-5 mx-auto bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\" onClick={() => {\r\n                                    setCitybox(false)\r\n                                }}>Close</button>\r\n                            </div>\r\n                            :\r\n                            <div className=\"h-72 overflow-y-scroll no-scrollbar\">\r\n                                {\r\n                                    searchcity.map((value: any, index: number) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div onClick={() => {\r\n                                                    setSelectedctiy(value);\r\n                                                    setCitybox(false);\r\n                                                    cityref!.current!.value = \"\";\r\n                                                }} key={index} className=\"my-6 cursor-pointer bg-white rounded-md py-1 border-2 text-center font-normal text-md hover:border-emerald-500\">{value[\"name\"]} - {value[\"code\"]}</div>\r\n                                            </>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"w-full pt-4 px-4 bg-background pb-10\">\r\n                <div className=\"w-full rounded-lg bg-white grid place-items-center shadow-lg py-2 sm:w-96 mx-auto\">\r\n                    <NavLink to={\"/\"} className={\"cursor-pointer\"}>\r\n                        <img src=\"./images/swrvlogo.png\" className=\"w-28 lg:w-32\" />\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"bg-white w-full shadow-xl p-4 mt-4 rounded-lg mx-auto sm:w-96\">\r\n                    <div className=\"hidden\">\r\n                        <input type=\"file\" accept=\"image/*\" ref={imgref} onChange={(value) => {\r\n                            let file_size = parseInt(((value!.target.files![0].size / 1024) / 1024).toString());\r\n                            if (file_size < 4) {\r\n                                setImgerror(null);\r\n                                setImale(value!.target.files![0]);\r\n                            } else {\r\n                                setImgerror(\"Image file size must be less then 4 mb\");\r\n                            }\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"bg-gray-200 rounded-lg my-6 mr-6 p-4 text-gray-400 flex w-full items-center justify-center\">\r\n                        <div className=\"grid place-items-center w-40 mr-4 h-40 object-cover\">\r\n                            {img == null ? <img src=\"/images/icons/gallery.png\" alt=\"error\" className=\"w-40 object-cover inline-block\" /> : <img src={URL.createObjectURL(img)} alt=\"error\" className=\"w-20 h-20 inline-block object-cover rounded-md\" />}\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"mt-4\">\r\n                                Drop profile photo here.\r\n                            </p>\r\n                            <p className=\"mt-4\">\r\n                                The image should either be jpg\r\n                                jped or png format and be a maximum size of 4 MB\r\n                            </p>\r\n                            <div className=\"mt-4\">\r\n                                {(imgerror == \"\" || imgerror == null || imgerror == undefined) ? null :\r\n                                    <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{imgerror}</div>\r\n                                }\r\n                                <div onClick={() => { imgref.current?.click(); }}>\r\n                                    <CusButton text=\"Upload\" textColor={\"text-white\"} width={'w-full'} background={\"bg-gray-400\"}></CusButton>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Brand Name</h2>\r\n                    <input ref={nameRef} className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\" />\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Brand code</h2>\r\n                    <input ref={codeRef} className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\" />\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Brand website</h2>\r\n                    <input ref={websiteRef} className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\" />\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Brand address</h2>\r\n                    <input ref={addressRef} className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\" />\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Brand city</h2>\r\n                    <div className=\"w-full bg-[#EEEEEE] rounded-md flex p-2\">\r\n                        <div className=\"grow\">\r\n                            <input ref={cityref} className=\"h-full w-full outline-none focus:border-gray-300 bg-transparent\" />\r\n                        </div>\r\n                        <div className=\"bg-white text-bold p-2 rounded-md grid place-items-center w-8 h-8 cursor-pointer\" onClick={() => {\r\n                            if (cityref.current?.value == null || cityref.current?.value == undefined || cityref.current?.value == \"\") {\r\n                                setCityerror(\"Enter the city name\");\r\n                            } else {\r\n                                setCitybox(true);\r\n                                setCityerror(null);\r\n                                getCity(cityref.current?.value ?? \"\");\r\n                            }\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    {(cityerror == \"\" || cityerror == null || cityerror == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{cityerror}</div>\r\n                    }\r\n                    {(selectedcity == \"\" || selectedcity == null || selectedcity == undefined) ? null :\r\n                        <div className=\"bg-white bg-opacity-10 border-2 text-center border-black rounded-md text-black text-md font-normal text-md my-4\">{selectedcity[\"name\"]} - {selectedcity[\"code\"]}</div>\r\n                    }\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Support Contact</h2>\r\n                    <div className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md flex\">\r\n                        <div className=\"text-center text-black font-normal text-md mr-4\">{selectedcity == null ? 0 : selectedcity[\"country\"][\"isd\"]}</div>\r\n                        <input onChange={handelcontent} value={contactnumber} type={\"text\"} maxLength={10} className=\"w-full outline-none bg-transparent focus:border-gray-300 rounded-md resize-none\" />\r\n                    </div>\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Support Email</h2>\r\n                    <input ref={emailRef} className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\" />\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Brand info</h2>\r\n                    <textarea ref={binfoRef} className=\"p-2 w-full h-32 outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"  ></textarea>\r\n                    <h2 className=\"text-primary tect-xl font-medium text-left my-1\">Company info</h2>\r\n                    <textarea ref={cinfoRef} className=\"p-2 w-full h-32 outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"></textarea>\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div onClick={async () => {\r\n                        if (img == null || img == undefined) {\r\n                            setError(\"Select the image\");\r\n                        } else if (nameRef.current?.value == null || nameRef.current?.value == undefined || nameRef.current?.value == \"\") {\r\n                            setError(\"Fill the Brand name\");\r\n                        }\r\n                        else if (codeRef.current?.value == null || codeRef.current?.value == undefined || codeRef.current?.value == \"\") {\r\n                            setError(\"Fill the Brand code\");\r\n                        }\r\n                        else if (websiteRef.current?.value == null || websiteRef.current?.value == undefined || websiteRef.current?.value == \"\") {\r\n                            setError(\"Fill the Brand website\");\r\n                        }\r\n\r\n                        else if (addressRef.current?.value == null || addressRef.current?.value == undefined || addressRef.current?.value == \"\") {\r\n                            setError(\"Fill the Brand address\");\r\n                        }\r\n                        else if (selectedcity == null) {\r\n                            setError(\"Fill the city\");\r\n                        }\r\n                        else if (contactnumber == null || contactnumber == undefined || contactnumber == 0) {\r\n                            setError(\"Fill the contact number\");\r\n                        }\r\n                        else if (emailRef.current?.value == null || emailRef.current?.value == undefined || emailRef.current?.value == \"\") {\r\n                            setError(\"Fill the Brand info\");\r\n                        }\r\n                        else if (!EmailValidator.validate(emailRef.current?.value)) {\r\n                            setError(\"Enter valid email\");\r\n\r\n                        }\r\n                        else if (contactnumber.toString().length != 10) {\r\n                            setError(\"Enter a 10 degit valid contact number\");\r\n                        }\r\n                        else if (binfoRef.current?.value == null || binfoRef.current?.value == undefined || binfoRef.current?.value == \"\") {\r\n                            setError(\"Fill the Brand info\");\r\n                        }\r\n                        else if (cinfoRef.current?.value == null || cinfoRef.current?.value == undefined || cinfoRef.current?.value == \"\") {\r\n                            setError(\"Fill the Campany info\");\r\n                        } else {\r\n                            const imageurl = await UploadFile(img);\r\n                            let req = {\r\n                                \"userId\": userId,\r\n                                \"brandLogoUrl\": imageurl,\r\n                                \"brandName\": nameRef.current?.value,\r\n                                \"brandCode\": codeRef.current?.value,\r\n                                \"brandWebUrl\": websiteRef.current?.value,\r\n                                \"brandFullRegisteredAddress\": addressRef.current?.value,\r\n                                \"brandSupportEmail\": emailRef.current?.value,\r\n                                \"brandSupportContact\": contactnumber,\r\n                                \"brandBioInfo\": binfoRef.current?.value,\r\n                                \"comapnyBio\": cinfoRef.current?.value,\r\n                                \"cityId\": selectedcity[\"id\"],\r\n                            };\r\n\r\n                            const data = await axios({\r\n                                method: 'post',\r\n                                url: `${BaseUrl}/api/add-brand`,\r\n                                data: req,\r\n                                headers: {\r\n                                    'Access-Control-Allow-Origin': '*',\r\n                                    'Access-Control-Allow-Headers': '*',\r\n                                    'Access-Control-Allow-Options': '*',\r\n                                    'Access-Control-Allow-Methods': '*',\r\n                                    'X-Content-Type-Options': '*',\r\n                                    'Content-Type': 'application/json',\r\n                                    'Accept': '*'\r\n                                }\r\n                            });\r\n                            if (data.data.status == false) {\r\n                                return setError(data.data.message);\r\n                            }\r\n                            return navigator(\"/home\");\r\n                        }\r\n                    }}>\r\n                        <CusButton text=\"Create Brand\" background=\"bg-secondary\" textColor={\"text-white\"} width={\"w-full\"}></CusButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default createBarnd;"],
  "mappings": "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",
  "names": ["import_react"]
}
