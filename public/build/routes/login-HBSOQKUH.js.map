{
  "version": 3,
  "sources": ["../../../app/components/home/footer/mainfooter.tsx", "../../../app/components/user/login.tsx", "../../../app/routes/login.tsx"],
  "sourcesContent": ["import { Link } from \"@remix-run/react\";\r\n\r\nexport const MainFooter = () => {\r\n    return (\r\n        <>\r\n            <div className=\"w-full flex py-6 px-8\">\r\n                <div className=\"flex flex-col sm:flex-row justify-center content-center items-center w-full\">\r\n                    <div>\r\n                        <Link to={\"/about\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">About</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/tos\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">Terms of use</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/pp\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">Privacy policy</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">Cookie policy</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">FAQ</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};", "import { Form, Link, useNavigate } from \"@remix-run/react\";\r\nimport { CusButton } from \"../utils/buttont\";\r\nimport { useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { auth } from \"~/services/firebase\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport * as EmailValidator from 'email-validator';\r\n\r\n\r\ntype LoginBoxState = {\r\n    message: string | null | undefined\r\n}\r\nexport const LoginBox = (props: LoginBoxState) => {\r\n    const navigator = useNavigate();\r\n    const [showpass, setShowPass] = useState<boolean>(false);\r\n    const changePassVisabel = () => {\r\n        setShowPass(!showpass);\r\n    }\r\n    const [error, setError] = useState<String | null>(null);\r\n    const socialLogin = async (email: string, pass: string) => {\r\n        const apidata = await axios.post(`${BaseUrl}/api/login`, { \"email\": email, \"password\": pass });\r\n        if (apidata.data.status) {\r\n            navigator(`/extra/sociallogin/${apidata.data.data.id}`);\r\n        } else {\r\n            setError(apidata.data.message);\r\n        }\r\n    }\r\n    const emailRef = useRef<HTMLInputElement>(null);\r\n    const [emailError, setEmailError] = useState<String | null>(null);\r\n    const [forgetPasswordBox, setForgetPasswordBox] = useState<boolean>(false);\r\n\r\n    const forgetPassword = async () => {\r\n        if (emailRef.current?.value == null || emailRef.current?.value == undefined || emailRef.current?.value == \"\") {\r\n            setEmailError(\"Fill the Brand info\");\r\n        }\r\n        else if (!EmailValidator.validate(emailRef.current?.value)) {\r\n            setEmailError(\"Enter valid email\");\r\n        } else {\r\n            const apidata = await axios.post(`${BaseUrl}/api/send-forgot-password`, { \"user\": emailRef.current?.value });\r\n            if (!apidata.data.status) return setEmailError(apidata.data.message);\r\n            return setForgetPasswordBox(false);\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <div className={`fixed top-0 left-0 bg-gray-600 bg-opacity-20 h-screen w-full grid place-items-center shadow-xl ${forgetPasswordBox ? \"\" : \"hidden\"} `} style={{ zIndex: 100 }}>\r\n                <div className=\"bg-white rounded-lg p-8 w-96\">\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow\"></div>\r\n                        <div onClick={() => { setForgetPasswordBox(false) }}> <FontAwesomeIcon className=\"text-black text-2xl font-bold\" icon={faXmark}></FontAwesomeIcon> </div>\r\n                    </div>\r\n                    <p className=\"text-black font-bold text-lg mt-4 text-center my-4\">Forget password</p>\r\n                    <input ref={emailRef} type={\"email\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\" placeholder=\"example@mail.com\" />\r\n                    {(emailError == \"\" || emailError == null || emailError == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{emailError}</div>\r\n                    }\r\n                    <div onClick={forgetPassword}>\r\n                        <CusButton text=\"Send\" textColor={\"text-white\"} background={\"bg-primary\"} fontwidth={\"font-bold\"} width={\"w-full\"} ></CusButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"relative\">\r\n                <div className=\" text-center text-[70px] -translate-y-4 font-black text-stroke text-white absolute top-0 w-full md:-translate-y-10 md:text-[150px]\">Welcome</div>\r\n                <div className=\"w-full px-6 sm:px-16 grid  lg:grid-cols-3 md:w-4/6 lg:w-full mx-auto mb-20\">\r\n                    <div className=\"hidden lg:flex\">\r\n                    </div>\r\n                    <div className=\"bg-white rounded-xl shadow-xl py-6 px-10 relative mt-12\">\r\n                        <Form method=\"post\">\r\n                            {props.message && <p className=\"w-full border-2 border-red-500 bg-red-500 bg-opacity-5  text-center my-2 rounded-md p-2 text-sm font-semibold text-red-500\">{props.message}</p>}\r\n                            <p className=\"text-black text-left font-bold text-lg mt-4\">Login</p>\r\n                            <p className=\"text-black text-left font-normal text-lg\">Email</p>\r\n                            <input name=\"email\" type={\"email\"} className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\" placeholder=\"example@mail.com\" />\r\n                            <p className=\"text-black text-left font-normal text-lg mt-4\">Password</p>\r\n                            <div className=\"bg-gray-200 rounded-md px-4 py-2 flex\">\r\n                                <input name=\"password\" type={showpass ? \"text\" : \"password\"} className=\"bg-transparent outline-none border-none focus:border-gray-300 rounded-md w-full\" placeholder=\"8 character\" />\r\n                                <div className=\"text-gray-600 text-center px-1 text-md\" onClick={changePassVisabel}>\r\n                                    <FontAwesomeIcon icon={showpass ? faEye : faEyeSlash}></FontAwesomeIcon>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid place-items-center py-2\">\r\n                                <div className=\"flex content-center gap-4\">\r\n                                    <div className=\"grid place-items-center\">\r\n                                        <p className=\"text-black text-left font-normal text-lg  allign-center\">Login with</p>\r\n                                    </div>\r\n                                    <img src=\"/images/media/facebook.png\" alt=\"error\" className=\"w-10 h-10\" />\r\n                                    <div onClick={async () => {\r\n                                        const googleProvider = new GoogleAuthProvider();\r\n                                        const res = await signInWithPopup(auth, googleProvider);\r\n                                        const pass = res.user.displayName?.trim().split(\" \").join('').toLowerCase().trim() + \"SWRV123@#\";\r\n                                        try {\r\n                                            await socialLogin(res.user.email!, pass);\r\n                                        } catch (e: any) {\r\n                                            setError(e.toString());\r\n                                        }\r\n                                    }}>\r\n                                        <img src=\"/images/icons/google.png\" alt=\"error\" className=\"w-10 h-10\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {(error == \"\" || error == null || error == undefined) ? null :\r\n                                <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                            }\r\n                            <button className=\"w-full inline black rounded-xl bg-secondary shadow-lg text-center font-bold text-white text-xl py-2 \">Submit</button>\r\n                            <p className=\"text-black text-left font-normal text-sm mt-4\">CAN'T LOG IN? <span onClick={() => { setForgetPasswordBox(true); }} className=\"font-bold cursor-pointer\">RESTORE PASSWORD</span></p>\r\n                            <p className=\"text-black text-left font-bold text-sm mt-6\">Don't have an account?</p>\r\n                            <Link to={\"/register\"}>\r\n                                <CusButton text=\"Join\" textColor={\"text-white\"} background={\"bg-primary\"} fontwidth={\"font-bold\"} width={\"w-full\"} ></CusButton>\r\n                            </Link>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"hidden lg:block\"></div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n", "import { useActionData } from \"@remix-run/react\";\r\nimport { MainFooter } from \"~/components/home/footer/mainfooter\";\r\nimport { IntroNavBar } from \"~/components/home/navbar/intronavbar\";\r\nimport { LoginBox } from \"~/components/user/login\";\r\nimport * as EmailValidator from 'email-validator';\r\nimport { ActionArgs, LoaderArgs, redirect } from \"@remix-run/node\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\n\r\n\r\nconst login = () => {\r\n    const data = useActionData();\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col h-screen\">\r\n                <IntroNavBar></IntroNavBar>\r\n                <LoginBox message={data?.message}></LoginBox>\r\n                <div className=\"grow\"></div>\r\n                <MainFooter></MainFooter>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n    const cookieHeader = request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n    if (cookie) {\r\n        if (cookie.isLogin) {\r\n            return redirect(\"/home\");\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n    const formData = await request.formData();\r\n    const value = Object.fromEntries(formData);\r\n    if (value.email == null || value.email == \"\" || !EmailValidator.validate(value.email.toString()) || value.email == undefined) {\r\n        return { message: \"Enter a valid email.\" };\r\n    }\r\n    if (value.password == \"\" || value.password == null || value.password == undefined) {\r\n        return { message: \"Enter the password\" };\r\n    }\r\n    try {\r\n        const data = await axios.post(`${BaseUrl}/api/login`, { \"email\": value.email, \"password\": value.password });\r\n        if (data.data.status == false) {\r\n            return { message: data.data.message };\r\n        } else {\r\n            const userdata = await axios({\r\n                method: 'post',\r\n                url: `${BaseUrl}/api/getuser`,\r\n                data: { \"id\": data.data.data.id },\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': '*',\r\n                    'Access-Control-Allow-Options': '*',\r\n                    'Access-Control-Allow-Methods': '*',\r\n                    'X-Content-Type-Options': '*',\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': '*'\r\n                }\r\n            });\r\n            return redirect(\"/home\", {\r\n                headers: {\r\n                    \"Set-Cookie\": await userPrefs.serialize({ user: userdata.data.data[0], isLogin: true }),\r\n                },\r\n            });\r\n        }\r\n    } catch (e) {\r\n        return { message: e };\r\n    }\r\n}\r\nexport default login;\r\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "EmailValidator", "import_jsx_dev_runtime"]
}
