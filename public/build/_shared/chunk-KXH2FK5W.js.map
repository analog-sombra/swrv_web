{
  "version": 3,
  "sources": ["../../../app/state/campaign/createcampaign.ts"],
  "sourcesContent": ["\r\nimport { create } from \"zustand\";\r\n\r\n\r\n\r\ninterface CreateCampaignState {\r\n    platform: string[]\r\n    setPlatform: (value: string) => void\r\n\r\n    campaignTypeId: string\r\n    setCampaignTypeId: (value: string) => void\r\n\r\n    media: string\r\n    setMedia: (value: string) => void\r\n\r\n    campaignInfo: string\r\n    setCampaignInfo: (value: string) => void\r\n\r\n\r\n    approval: boolean\r\n    setApproval: (value: boolean) => void\r\n\r\n    discoutCoupon: string\r\n    setDiscoutCoupon: (value: string) => void\r\n\r\n\r\n    affiliatedLinks: string\r\n    setAffiliatedLinks: (value: string) => void\r\n\r\n\r\n    target: number,\r\n    setTarget: (value: number) => void\r\n\r\n    minTarget: number,\r\n    setMinTarget: (value: number) => void\r\n\r\n    rating: number,\r\n    setRating: (value: number) => void\r\n\r\n    mendtion: string[]\r\n    addMendtion: (value: string) => void\r\n    removeMeddtion: (value: string) => void\r\n    clearMendtion: () => void\r\n\r\n    hashtag: string[]\r\n    addHashtag: (value: string) => void\r\n    removeHashtag: (value: string) => void\r\n    clearHashtag: () => void\r\n\r\n    dos: string[]\r\n    addDos: (value: string) => void\r\n    removeDos: (value: string) => void\r\n\r\n    donts: string[]\r\n    addDonts: (value: string) => void\r\n    removeDonts: (value: string) => void\r\n\r\n    pdffile: File[]\r\n    addPdfFile: (value: File) => void\r\n\r\n    //step 3\r\n    audience: string[]\r\n    addAudience: (value: string) => void\r\n    removeAudience: (value: string) => void\r\n    clearAudience: () => void\r\n\r\n\r\n    infLocation: {\r\n        id: string\r\n        categoryCode: string\r\n        categoryName: string\r\n    }\r\n    setInfLocation: (id: string, name: string, type: string) => void\r\n\r\n    tilldate: string\r\n    setTillDate: (value: string) => void\r\n\r\n    maxInf: number\r\n    setMaxInf: (value: number) => void\r\n\r\n    remuneration: string\r\n    setRemuneration: (value: string) => void\r\n\r\n    remunerationType: string\r\n    setRemunerationType: (value: string) => void\r\n\r\n\r\n    // step 4\r\n    campaignName: string\r\n    setCampaignName: (value: string) => void\r\n\r\n    planedBudget: number\r\n    setPlanedBudget: (value: number) => void\r\n\r\n    costPerPost: number\r\n    setCostPerPost: (value: number) => void\r\n\r\n    startDate: string\r\n    setStartDate: (value: string) => void\r\n\r\n    endDate: string\r\n    setEndDate: (value: string) => void\r\n\r\n    minReach: number\r\n    setMinReach: (value: number) => void\r\n\r\n    maxReact: number\r\n    setMaxReact: (value: number) => void\r\n\r\n    publicGlobally: boolean\r\n    setPublicGlobally: (value: boolean) => void\r\n\r\n\r\n    //step 5\r\n\r\n    brandinfo: string\r\n    setBrandinfo: (value: string) => void\r\n\r\n    campaginPurpose: string\r\n    setCampaginPurpose: (value: string) => void\r\n\r\n    image: File[]\r\n    addImage: (value: File) => void\r\n    removeImage: (value: File) => void\r\n\r\n    campaign: object\r\n    addProperty: (value: object) => void\r\n}\r\n\r\n\r\nconst CreateCampaignStore = create<CreateCampaignState>()((set) => ({\r\n\r\n    campaignTypeId: \"0\",\r\n    setCampaignTypeId: (value) => set((state) => ({ campaignTypeId: value })),\r\n\r\n    platform: [],\r\n    setPlatform: (value) => set((state) => {\r\n        if (state.platform.includes(value)) {\r\n            const setval = state.platform.filter((val) => val != value);\r\n            return ({ platform: [...setval] });\r\n        } else {\r\n            return ({ platform: [...state.platform, value] });\r\n        }\r\n    }),\r\n\r\n    media: \"\",\r\n    setMedia: (value) => set((state) => ({ media: value })),\r\n\r\n    campaignInfo: \"\",\r\n    setCampaignInfo: (value) => set((state) => ({ campaignInfo: value })),\r\n\r\n\r\n    approval: false,\r\n    setApproval: (value) => set((state) => ({ approval: value })),\r\n\r\n\r\n    discoutCoupon: \"\",\r\n    setDiscoutCoupon: (value) => set((state) => ({ discoutCoupon: value })),\r\n\r\n    affiliatedLinks: \"\",\r\n    setAffiliatedLinks: (value) => set((state) => ({ affiliatedLinks: value })),\r\n\r\n    target: 0,\r\n    setTarget: (value) => set((state) => ({ target: value })),\r\n\r\n    minTarget: 0,\r\n    setMinTarget: (value) => set((state) => ({ minTarget: value })),\r\n\r\n    rating: 0,\r\n    setRating: (value) => set((state) => ({ rating: value })),\r\n\r\n    mendtion: [],\r\n    addMendtion: (value) => set((state) => ({ mendtion: [...state.mendtion, value] })),\r\n    removeMeddtion: (value) => set((state) => {\r\n        const mymedn = state.mendtion.filter((value1) => value1 != value);\r\n        return ({ mendtion: mymedn });\r\n    }),\r\n    clearMendtion: () => set((state) => ({ mendtion: [] })),\r\n\r\n    hashtag: [],\r\n    addHashtag: (value) => set((state) => ({ hashtag: [...state.hashtag, value] })),\r\n    removeHashtag: (value) => set((state) => {\r\n        const myhashtag = state.hashtag.filter((value1) => value1 != value);\r\n        return ({ hashtag: myhashtag });\r\n    }),\r\n    clearHashtag: () => set((state) => ({ hashtag: [] })),\r\n\r\n    dos: [],\r\n    addDos: (value) => set((state) => ({ dos: [...state.dos, value] })),\r\n    removeDos: (value) => set((state) => {\r\n        const mydos = state.dos.filter((value1) => value1 != value);\r\n        return ({ dos: mydos });\r\n    }),\r\n\r\n    donts: [],\r\n    addDonts: (value) => set((state) => ({ donts: [...state.donts, value] })),\r\n    removeDonts: (value) => set((state) => {\r\n        const mydonts = state.donts.filter((value1) => value1 != value);\r\n        return ({ donts: mydonts });\r\n    }),\r\n\r\n    pdffile: [],\r\n    addPdfFile: (value) => set((state) => ({ pdffile: [value] })),\r\n\r\n    //setp 3\r\n    infLocation: {\r\n        id: \"\",\r\n        categoryCode: \"\",\r\n        categoryName: \"\",\r\n    },\r\n    setInfLocation: (id, name, type) => set((state) => ({ infLocation: { id: id, categoryCode: type, categoryName: name } })),\r\n\r\n    audience: [],\r\n    addAudience: (value) => set((state) => ({ audience: [...state.audience, value] })),\r\n    removeAudience: (value) => set((state) => {\r\n        const audienceloc = state.audience.filter((value1) => value1 != value);\r\n        return ({ audience: audienceloc });\r\n    }),\r\n    clearAudience: () => set((state) => ({ audience: [] })),\r\n\r\n    tilldate: \"\",\r\n    setTillDate: (value) => set((state) => ({ tilldate: value })),\r\n\r\n    maxInf: 0,\r\n    setMaxInf: (value) => set((state) => ({ maxInf: value })),\r\n\r\n    remuneration: \"\",\r\n    setRemuneration: (value) => set((state) => ({ remuneration: value })),\r\n\r\n\r\n    remunerationType: \"\",\r\n    setRemunerationType: (value) => set((state) => ({ remunerationType: value })),\r\n\r\n    // step 4\r\n    campaignName: \"\",\r\n    setCampaignName: (value) => set((state) => ({ campaignName: value })),\r\n\r\n    planedBudget: 0,\r\n    setPlanedBudget: (value) => set((state) => ({ planedBudget: value })),\r\n\r\n    costPerPost: 0,\r\n    setCostPerPost: (value) => set((state) => ({ costPerPost: value })),\r\n\r\n    startDate: \"\",\r\n    setStartDate: (value) => set((state) => ({ startDate: value })),\r\n\r\n    endDate: \"\",\r\n    setEndDate: (value) => set((state) => ({ endDate: value })),\r\n\r\n    minReach: 0,\r\n    setMinReach: (value) => set((state) => ({ minReach: value })),\r\n\r\n    maxReact: 0,\r\n    setMaxReact: (value) => set((state) => ({ maxReact: value })),\r\n\r\n    publicGlobally: false,\r\n    setPublicGlobally: (value) => set((state) => ({ publicGlobally: value })),\r\n\r\n    image: [],\r\n    addImage: (value) => set((state) => ({ image: [...state.image, value] })),\r\n    removeImage: (value) => set((state) => {\r\n        const myimages = state.image.filter((value1) => value1 != value);\r\n        return ({ image: myimages });\r\n    }),\r\n\r\n    brandinfo: \"\",\r\n    setBrandinfo: (value) => set((state) => ({ brandinfo: value })),\r\n    campaginPurpose: \"\",\r\n    setCampaginPurpose: (value) => set((state) => ({ campaginPurpose: value })),\r\n\r\n    campaign: {},\r\n    addProperty: (value) => set((state) => ({ campaign: { value } })),\r\n}));\r\n\r\nexport default CreateCampaignStore;\r\n\r\n"],
  "mappings": ";;;;;AAkIA,IAAM,sBAAsB,OAA4B,EAAE,CAAC,SAAS;AAAA,EAEhE,gBAAgB;AAAA,EAChB,mBAAmB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,gBAAgB,MAAM,EAAE;AAAA,EAExE,UAAU,CAAC;AAAA,EACX,aAAa,CAAC,UAAU,IAAI,CAAC,UAAU;AACnC,QAAI,MAAM,SAAS,SAAS,KAAK,GAAG;AAChC,YAAM,SAAS,MAAM,SAAS,OAAO,CAAC,QAAQ,OAAO,KAAK;AAC1D,aAAQ,EAAE,UAAU,CAAC,GAAG,MAAM,EAAE;AAAA,IACpC,OAAO;AACH,aAAQ,EAAE,UAAU,CAAC,GAAG,MAAM,UAAU,KAAK,EAAE;AAAA,IACnD;AAAA,EACJ,CAAC;AAAA,EAED,OAAO;AAAA,EACP,UAAU,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,OAAO,MAAM,EAAE;AAAA,EAEtD,cAAc;AAAA,EACd,iBAAiB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,cAAc,MAAM,EAAE;AAAA,EAGpE,UAAU;AAAA,EACV,aAAa,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,UAAU,MAAM,EAAE;AAAA,EAG5D,eAAe;AAAA,EACf,kBAAkB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,eAAe,MAAM,EAAE;AAAA,EAEtE,iBAAiB;AAAA,EACjB,oBAAoB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,iBAAiB,MAAM,EAAE;AAAA,EAE1E,QAAQ;AAAA,EACR,WAAW,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,QAAQ,MAAM,EAAE;AAAA,EAExD,WAAW;AAAA,EACX,cAAc,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,WAAW,MAAM,EAAE;AAAA,EAE9D,QAAQ;AAAA,EACR,WAAW,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,QAAQ,MAAM,EAAE;AAAA,EAExD,UAAU,CAAC;AAAA,EACX,aAAa,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,GAAG,MAAM,UAAU,KAAK,EAAE,EAAE;AAAA,EACjF,gBAAgB,CAAC,UAAU,IAAI,CAAC,UAAU;AACtC,UAAM,SAAS,MAAM,SAAS,OAAO,CAAC,WAAW,UAAU,KAAK;AAChE,WAAQ,EAAE,UAAU,OAAO;AAAA,EAC/B,CAAC;AAAA,EACD,eAAe,MAAM,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,EAAE;AAAA,EAEtD,SAAS,CAAC;AAAA,EACV,YAAY,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,MAAM,SAAS,KAAK,EAAE,EAAE;AAAA,EAC9E,eAAe,CAAC,UAAU,IAAI,CAAC,UAAU;AACrC,UAAM,YAAY,MAAM,QAAQ,OAAO,CAAC,WAAW,UAAU,KAAK;AAClE,WAAQ,EAAE,SAAS,UAAU;AAAA,EACjC,CAAC;AAAA,EACD,cAAc,MAAM,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,EAAE;AAAA,EAEpD,KAAK,CAAC;AAAA,EACN,QAAQ,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,GAAG,MAAM,KAAK,KAAK,EAAE,EAAE;AAAA,EAClE,WAAW,CAAC,UAAU,IAAI,CAAC,UAAU;AACjC,UAAM,QAAQ,MAAM,IAAI,OAAO,CAAC,WAAW,UAAU,KAAK;AAC1D,WAAQ,EAAE,KAAK,MAAM;AAAA,EACzB,CAAC;AAAA,EAED,OAAO,CAAC;AAAA,EACR,UAAU,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,MAAM,OAAO,KAAK,EAAE,EAAE;AAAA,EACxE,aAAa,CAAC,UAAU,IAAI,CAAC,UAAU;AACnC,UAAM,UAAU,MAAM,MAAM,OAAO,CAAC,WAAW,UAAU,KAAK;AAC9D,WAAQ,EAAE,OAAO,QAAQ;AAAA,EAC7B,CAAC;AAAA,EAED,SAAS,CAAC;AAAA,EACV,YAAY,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,KAAK,EAAE,EAAE;AAAA,EAG5D,aAAa;AAAA,IACT,IAAI;AAAA,IACJ,cAAc;AAAA,IACd,cAAc;AAAA,EAClB;AAAA,EACA,gBAAgB,CAAC,IAAI,MAAM,SAAS,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,IAAQ,cAAc,MAAM,cAAc,KAAK,EAAE,EAAE;AAAA,EAExH,UAAU,CAAC;AAAA,EACX,aAAa,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,GAAG,MAAM,UAAU,KAAK,EAAE,EAAE;AAAA,EACjF,gBAAgB,CAAC,UAAU,IAAI,CAAC,UAAU;AACtC,UAAM,cAAc,MAAM,SAAS,OAAO,CAAC,WAAW,UAAU,KAAK;AACrE,WAAQ,EAAE,UAAU,YAAY;AAAA,EACpC,CAAC;AAAA,EACD,eAAe,MAAM,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,EAAE;AAAA,EAEtD,UAAU;AAAA,EACV,aAAa,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,UAAU,MAAM,EAAE;AAAA,EAE5D,QAAQ;AAAA,EACR,WAAW,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,QAAQ,MAAM,EAAE;AAAA,EAExD,cAAc;AAAA,EACd,iBAAiB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,cAAc,MAAM,EAAE;AAAA,EAGpE,kBAAkB;AAAA,EAClB,qBAAqB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,kBAAkB,MAAM,EAAE;AAAA,EAG5E,cAAc;AAAA,EACd,iBAAiB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,cAAc,MAAM,EAAE;AAAA,EAEpE,cAAc;AAAA,EACd,iBAAiB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,cAAc,MAAM,EAAE;AAAA,EAEpE,aAAa;AAAA,EACb,gBAAgB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,aAAa,MAAM,EAAE;AAAA,EAElE,WAAW;AAAA,EACX,cAAc,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,WAAW,MAAM,EAAE;AAAA,EAE9D,SAAS;AAAA,EACT,YAAY,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,SAAS,MAAM,EAAE;AAAA,EAE1D,UAAU;AAAA,EACV,aAAa,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,UAAU,MAAM,EAAE;AAAA,EAE5D,UAAU;AAAA,EACV,aAAa,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,UAAU,MAAM,EAAE;AAAA,EAE5D,gBAAgB;AAAA,EAChB,mBAAmB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,gBAAgB,MAAM,EAAE;AAAA,EAExE,OAAO,CAAC;AAAA,EACR,UAAU,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,MAAM,OAAO,KAAK,EAAE,EAAE;AAAA,EACxE,aAAa,CAAC,UAAU,IAAI,CAAC,UAAU;AACnC,UAAM,WAAW,MAAM,MAAM,OAAO,CAAC,WAAW,UAAU,KAAK;AAC/D,WAAQ,EAAE,OAAO,SAAS;AAAA,EAC9B,CAAC;AAAA,EAED,WAAW;AAAA,EACX,cAAc,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,WAAW,MAAM,EAAE;AAAA,EAC9D,iBAAiB;AAAA,EACjB,oBAAoB,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,iBAAiB,MAAM,EAAE;AAAA,EAE1E,UAAU,CAAC;AAAA,EACX,aAAa,CAAC,UAAU,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AACpE,EAAE;AAEF,IAAO,yBAAQ;",
  "names": []
}
