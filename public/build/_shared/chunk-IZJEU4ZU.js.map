{
  "version": 3,
  "sources": ["../../../app/routes/home/brand.$id.tsx", "../../../app/components/utils/extrabrandcard.tsx"],
  "sourcesContent": ["import { faHandshake, faHeart, faNetworkWired, faRemove, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport useLocalStorageState from \"use-local-storage-state\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport ExtraBrandCard from \"~/components/utils/extrabrandcard\";\r\nimport PastBrandCard from \"~/components/utils/pastbrandcard\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n    const id = props.params.id;\r\n    const branddata = await axios.post(`${BaseUrl}/api/get-brand`, { \"id\": id, });\r\n    const cookieHeader = props.request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n    return json({ brand: branddata.data.data, user: cookie.user });\r\n}\r\n\r\nconst BrandPage = () => {\r\n    const brand = useLoaderData().brand;\r\n    const user = useLoaderData().user;\r\n    const [isPast, setPast] = useState(false);\r\n    const logo = brand.logo == \"\" || brand.logo == undefined || brand.logo == null || brand.logo == \"0\" ? \"images/avatar.png\" : brand.logo;\r\n    const [fav, setFav] = useState<boolean>(false);\r\n\r\n    const [myfavBrand, setMyfavBrand] = useLocalStorageState<brandData[]>('favbrand', {\r\n        defaultValue: []\r\n    });\r\n\r\n    type brandData = {\r\n        id: string\r\n        logo: string\r\n        name: string\r\n    }\r\n\r\n    const setFavBrand = (brand: brandData) => {\r\n        setMyfavBrand([...myfavBrand, brand])\r\n        setFav(true);\r\n    }\r\n\r\n    const revmoceFavBrand = (brand: brandData) => {\r\n        let savebrand: brandData[] = [];\r\n        for (let i: number = 0; i < myfavBrand.length; i++) {\r\n            if (myfavBrand[i][\"id\"] != brand[\"id\"]) {\r\n                savebrand.push(myfavBrand[i]);\r\n            }\r\n        }\r\n        setMyfavBrand(savebrand);\r\n        setFav(false);\r\n    }\r\n    useEffect(() => {\r\n        let res: boolean = false;\r\n        myfavBrand.map((val: brandData, index: number) => {\r\n            if (val.id == brand.id) res = true;\r\n        });\r\n        if (res) { setFav(true) }\r\n        else { setFav(false) }\r\n    }, []);\r\n\r\n    const [error, setError] = useState<string | null>(null);\r\n    const messageRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    const [connectBox, setConnectBox] = useState<boolean>(false);\r\n\r\n    return (\r\n        <>\r\n            <div className={`w-full h-screen bg-gray-500 fixed top-0 left-0 bg-opacity-30 grid place-items-center ${connectBox ? \"fixed\" : \"hidden\"}`} style={{ zIndex: 100 }}>\r\n                <div className=\"p-6 bg-white rounded-xl shadow-xl w-96\">\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow\"></div>\r\n                        <div onClick={() => {\r\n                            setConnectBox(false);\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faRemove} className=\"font-bold text-2xl text-center text-primary\"></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <h1 className=\"text-primary text-lg font-bold text-left\">Connect</h1>\r\n                    <textarea ref={messageRef} className=\"p-4 w-full h-40 outline-none border-2 bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none mt-4\" placeholder=\"message\" ></textarea>\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow\"></div>\r\n                        <div onClick={async () => {\r\n                            if (messageRef.current?.value == null || messageRef.current?.value == undefined || messageRef.current?.value == \"\") return setError(\"Message can't be blank\");\r\n\r\n                            let req = {\r\n                                \"campaignDraftId\": \"0\",\r\n                                \"fromUserId\": user.id,\r\n                                \"toUserId\": \"89\",\r\n                                \"comment\": messageRef.current?.value\r\n                            };\r\n\r\n                            const data = await axios({\r\n                                method: 'post',\r\n                                url: `${BaseUrl}/api/add-chat`,\r\n                                data: req,\r\n                                headers: {\r\n                                    'Access-Control-Allow-Origin': '*',\r\n                                    'Access-Control-Allow-Headers': '*',\r\n                                    'Access-Control-Allow-Options': '*',\r\n                                    'Access-Control-Allow-Methods': '*',\r\n                                    'X-Content-Type-Options': '*',\r\n                                    'Content-Type': 'application/json',\r\n                                    'Accept': '*'\r\n                                }\r\n                            });\r\n\r\n                            if (!data.data.status) return setError(data.data.message);\r\n                            return setConnectBox(false);\r\n\r\n\r\n                        }}>\r\n                            <CusButton text=\"send\" background=\"bg-primary\" textColor={\"text-white\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-full mt-4 shadow-xl bg-white rounded-xl\">\r\n                <div className=\"w-full relative\">\r\n                    <div className=\"absolute top-5 right-5\">\r\n                        <FontAwesomeIcon onClick={() => {\r\n                            let brandval: brandData = { id: brand.id, logo: logo, name: brand.name };\r\n                            if (fav) return revmoceFavBrand(brandval);\r\n                            return setFavBrand(brandval);\r\n                        }} icon={faHeart} className={`${fav ? \"text-red-500\" : \"text-gray-500\"} h-12 w-12`}></FontAwesomeIcon>\r\n                    </div>\r\n                    <img src=\"/images/products/shoe1.jpg\" alt=\"error\" className=\"w-full h-60 object-cover rounded-t-xl\" />\r\n                </div>\r\n                <div className=\"flex flex-col lg:flex-row\">\r\n                    <div className=\"p-8 flex flex-row gap-x-3 lg:flex-col\">\r\n                        <div>\r\n                            <img src={logo} alt=\"brand logo\" className=\"w-32 h-32 rounded-md\" />\r\n                        </div>\r\n                        <div>\r\n                            <h1 className=\"text-primary text-lg font-medium my-2\">{brand.name}</h1>\r\n                            <p className=\"text-primary text-md font-normal\">Category: Consumer Electronics</p>\r\n                            <p className=\"text-primary text-md font-normal\">website: {brand.webUrl}</p>\r\n                            <div onClick={() => {\r\n                                setConnectBox(true);\r\n                            }}>\r\n                                <CusButton text=\"Connect\" background=\"bg-secondary\" fontwidth=\"font-bold\"></CusButton>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"h-72 w-[2px] bg-gray-300 hidden lg:block mt-8\"></div>\r\n                    <div className=\"p-8\">\r\n                        <div className=\"flex gap-x-4 flex-col md:flex-row gap-y-2\">\r\n                            <Rating></Rating>\r\n                            <Completed></Completed>\r\n                            <Connection></Connection>\r\n                        </div>\r\n                        <h1 className=\"text-primary text-lg font-medium mt-4 mb-2\">Brand info</h1>\r\n                        <p className=\"text-black text-sm font-normal\">{brand.info}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-full mt-4 shadow-xl bg-white rounded-xl\">\r\n                <div className=\"flex mx-4 gap-4\">\r\n                    <div onClick={() => { setPast(false) }}>\r\n                        <CusButton text=\"Available Campaigns\" background={`${isPast ? \"bg-gray-100\" : \"bg-[#01FFF4]\"}`} fontwidth=\"font-bold\" textColor={`${isPast ? \"text-gray-600\" : \"text-black\"}`}></CusButton>\r\n                    </div>\r\n                    <div onClick={() => { setPast(true) }}>\r\n                        <CusButton text=\"Past associations\" background={`${isPast ? \"bg-[#01FFF4]\" : \"bg-gray-100\"}`} fontwidth=\"font-bold\" textColor={`${isPast ? \"text-black\" : \"text-gray-600\"}`}></CusButton>\r\n                    </div>\r\n                </div>\r\n                {isPast\r\n                    ?\r\n                    <PastBrandAssociation></PastBrandAssociation>\r\n                    :\r\n                    <AvailableCampaigns></AvailableCampaigns>\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BrandPage;\r\n\r\n\r\n\r\nconst Rating = () => {\r\n    return (\r\n        <>\r\n            <div className=\"bg-gray-100 flex rounded-lg gap-x-4\">\r\n                <div className=\"bg-gray-200 p-2 rounded-md grid place-items-center\">\r\n                    <FontAwesomeIcon className=\"text-black text-3xl\" icon={faStar}></FontAwesomeIcon>\r\n                </div>\r\n                <div className=\"p-2\">\r\n                    <h1 className=\"text-black text-lg font-bold\">4.2</h1>\r\n                    <p className=\"text-black text-sm font-normal\">Rating</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst Connection = () => {\r\n    return (\r\n        <>\r\n            <div className=\"bg-gray-100 flex rounded-lg gap-x-4\">\r\n                <div className=\"bg-gray-200 p-2 rounded-md grid place-items-center\">\r\n                    <FontAwesomeIcon className=\"text-black text-3xl\" icon={faHandshake}></FontAwesomeIcon>\r\n                </div>\r\n                <div className=\"p-2\">\r\n                    <h1 className=\"text-black text-lg font-bold\">21</h1>\r\n                    <p className=\"text-black text-sm font-normal\">Connections</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst Completed = () => {\r\n    return (\r\n        <>\r\n            <div className=\"bg-gray-100 flex rounded-lg gap-x-4\">\r\n                <div className=\"bg-gray-200 p-2 rounded-md grid place-items-center\">\r\n                    <FontAwesomeIcon className=\"text-black text-3xl\" icon={faNetworkWired}></FontAwesomeIcon>\r\n                </div>\r\n                <div className=\"p-2\">\r\n                    <h1 className=\"text-black text-lg font-bold\">48</h1>\r\n                    <p className=\"text-black text-sm font-normal\">Completed Campaigns</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst AvailableCampaigns = () => {\r\n    return (\r\n        <>\r\n            <div className=\"grid gap-4 grid-col-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 p-3 place-items-center\">\r\n                <ExtraBrandCard></ExtraBrandCard>\r\n                <ExtraBrandCard></ExtraBrandCard>\r\n                <ExtraBrandCard></ExtraBrandCard>\r\n                <ExtraBrandCard></ExtraBrandCard>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst PastBrandAssociation = () => {\r\n    return (\r\n        <>\r\n            <div className=\"grid gap-4 grid-col-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 p-3 place-items-center\">\r\n                <PastBrandCard></PastBrandCard>\r\n                <PastBrandCard></PastBrandCard>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Rating, Connection, Completed };", "import { CusButton } from \"./buttont\";\r\n\r\nconst ExtraBrandCard = () => {\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-xl shadow-xl w-64 mt-2\">\r\n                <div>\r\n                    <img src=\"/images/products/shoe1.jpg\" alt=\"error\" className=\"rounded-t-xl\" />\r\n                </div>\r\n                <div className=\"p-4 -translate-y-8\">\r\n                    <div className=\"flex items-end gap-x-3 \">\r\n                        <div>\r\n                            <img src=\"/images/brand/adidas.jpg\" alt=\"error\" className=\"object-cover w-16 h-16 rounded\" />\r\n                        </div>\r\n                        <p className=\"text-black font-semibold text-xl content-end text-left\">Adidas Cases</p>\r\n                    </div>\r\n                    <p className=\"text-black font-semibold text-md text-left my-4\">Lulu 50% off - SPORTS WEEK</p>\r\n                    <p className=\"text-black font-semibold text-xs text-left\">Category : Consumer Electronics</p>\r\n                    <p className=\"text-black font-semibold text-xs text-left\">www.adidas.co.in</p>\r\n                    <div className=\"w-full h-[1px] bg-black my-2\"></div>\r\n                    <div className=\"flex\">\r\n                        <p className=\"text-black font-semibold text-xs text-left\">Platform</p>\r\n                        <div className=\"grow\"></div>\r\n                        <p className=\"text-black font-semibold text-xs text-left\">Platform</p>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <div className=\"grow flex items-center\">\r\n                            <div className=\"mx-1\">\r\n                                <div className=\"p-1 border-2 border-blue-500 rounded-full\">\r\n                                    <img src=\"/images/media/youtube.png\" alt=\"error\" className=\"rounded-full w-8 h-8\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mx-1\">\r\n                                <div className=\"p-1 border-2 border-blue-500 rounded-full\">\r\n                                    <img src=\"/images/media/instagram.png\" alt=\"error\" className=\"rounded-full w-8 h-8\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"text-black font-bold  text-md text-right my-4\">3500 <br />USD / post</p>\r\n                        </div>\r\n                    </div>\r\n                    <CusButton text=\"Learn more & apply\" textColor={\"text-black\"} background={\"bg-[#fbca8e]\"} width={\"w-full\"} margin={\"my-0\"} fontwidth={\"font-bold\"}></CusButton>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExtraBrandCard;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "brand"]
}
